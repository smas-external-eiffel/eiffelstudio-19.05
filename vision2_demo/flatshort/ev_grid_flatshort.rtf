{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "[{\line}
{\tab}{\tab}		Widget which is a combination of an EV_TREE and an EV_MULTI_COLUMN_LIST.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Item Insertion:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The grid is an item holder for objects of type EV_GRID_ITEM and its descendents.  Each grid{\line}
{\tab}{\tab}		item may be inserted in to the grid at a specific column and row.  An item itself may be{\line}
{\tab}{\tab}		added to the grid via {\cf5 set_item}, which takes a column and row index.  Items be also added{\line}
{\tab}{\tab}		via the {\cf5 set_item} routine of the row (EV_GRID_ROW) and column (EV_GRID_COLUMN) objects{\line}
{\tab}{\tab}		contained within Current.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Items inserted may be Void if necessary, this may be useful to blank out any existing items{\line}
{\tab}{\tab}		set.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		If a grid contains no items and therefore has no rows or columns, inserting an item will{\line}
{\tab}{\tab}		dynamically resize and automatically create the columns and rows so that it can contain{\line}
{\tab}{\tab}		and display the newly inserted item. New columns and rows may also be added to the grid via{\line}
{\tab}{\tab}		{\cf5 insert_new_column} and {\cf5 insert_new_row} respectively.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		--------------------------------------------------------------------------------{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Dynamic Mode:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		There may be times where you have very large numbers of items you wish to{\line}
{\tab}{\tab}		display into the grid. Unfortunately, the overhead of building thousands and{\line}
{\tab}{\tab}		thousands of grid items and inserting them can take a considerable amount of{\line}
{\tab}{\tab}		which shows up as a delay to users of the system. To prevent this, the grid{\line}
{\tab}{\tab}		supports the use of a dynamic mode which permit you to specify how many items{\line}
{\tab}{\tab}		are contained and then as and when the grid requires access to one of these items{\line}
{\tab}{\tab}		for display purposes, an event is triggered requesting the item to be displayed.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		dynamic content is enabled via {\cf5 enable_partial_dynamic_content}. In this mode{\line}
{\tab}{\tab}		whenever the grid attempts to draw an item that is Void, it queries you for the{\line}
{\tab}{\tab}		item and then inserts it into the grid.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The grid requests an item in the dynamic mode through the calling of the{\line}
{\tab}{\tab}		{\cf5 dynamic_content_function} which may be set via a call to{\line}
{\tab}{\tab}		{\cf5 set_dynamic_content_function}. This function has two integer arguments{\line}
{\tab}{\tab}		corresponding to the column and row index of the desired item and a return type{\line}
{\tab}{\tab}		of EV_GRID_ITEM.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		--------------------------------------------------------------------------------{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Size and Position:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The grid is comprised of the following graphical elements:{\line}
{\tab}{\tab}		1. A header displayed at the top of Current which may be hidden/shown via{\line}
{\tab}{\tab}		{\cf5 show_header} and hide_header'.{\line}
{\tab}{\tab}		2. A viewable area in which the contents of Current are displayed, displayed{\line}
{\tab}{\tab}		immediately below the header. The size of this{\line}
{\tab}{\tab}		area is given by {\cf5 viewable_width} and {\cf5 viewable_height} with its position{\line}
{\tab}{\tab}		relative to the top left corner of Current given by {\cf5 viewable_x_offset},{\line}
{\tab}{\tab}		{\cf5 viewable_y_offset}. Note that {\cf5 viewable_y_offset} changes based on the visible{\line}
{\tab}{\tab}		state of the header.{\line}
{\tab}{\tab}		3. A horizontal scroll bar displayed below the viewable area, only shown if the{\line}
{\tab}{\tab}		virtual width of Current is greater than {\cf5 viewable_width}.{\line}
{\tab}{\tab}		4. A vertical scroll bar displayed to the right of viewable area and header,{\line}
{\tab}{\tab}		only shown if the virtual height of Current is greater than {\cf5 viewable_height}.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		You may supress the displaying of the scroll bars if required via calls to{\line}
{\tab}{\tab}		{\cf5 hide_vertical_scroll_bar} and {\cf5 hide_horizontal_scroll_bar} which ensure that{\line}
{\tab}{\tab}		the scroll bars are never displayed. This is useful for situations where you{\line}
{\tab}{\tab}		wish to control the virtual position of the grid via your own custom interface.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The virtual size of the grid represents the complete screen area in pixels{\line}
{\tab}{\tab}		required to display the contents of Current and may be queried via{\line}
{\tab}{\tab}		{\cf5 virtual_width} and {\cf5 virtual_height}. If the contents of the grid are smaller{\line}
{\tab}{\tab}		than the viewable area, then the virtual size is equal to the viewable area,{\line}
{\tab}{\tab}		otherwise an area of the virtual size is displayed within viewable area, with{\line}
{\tab}{\tab}		the coordinates of this area (relative to the top left corner) within the{\line}
{\tab}{\tab}		virtual size given by virtual_x and virtual_y. As the scroll bars are moved,{\line}
{\tab}{\tab}		virtual_x and virtual_y are directly manipulated, although you may set the{\line}
{\tab}{\tab}		virtual position explicitly via calls to set_virtual_x and set_virtual_y.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The maximum permitted virtual position of the grid is given by{\line}
{\tab}{\tab}		{\cf5 maximum_virtual_x_position}, {\cf5 maximum_virtual_y_position} which is dependent on{\line}
{\tab}{\tab}		the following factors:{\line}
{\tab}{\tab}			The viewable area of the grid.{\line}
{\tab}{\tab}			The {\cf5 virtual_width} and {\cf5 virtual_height}.{\line}
{\tab}{\tab}			The is_*_scrolling_per_item properties.{\line}
{\tab}{\tab}			The is_*_overscroll_enabled properties.{\line}
{\tab}{\tab}		Changing one or more of these properties may immediately change the virtual width,{\line}
{\tab}{\tab}		height or maximum virtual positions, and possibly scroll the grid to ensure that the{\line}
{\tab}{\tab}		current virtual position is within the new bounds.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The properties {\cf5 is_vertical_overscroll_enabled} and {\cf5 is_horizontal_overscroll_enabled}{\line}
{\tab}{\tab}		permit you to ensure the grid permits scrolling past the final item, ensuring that there{\line}
{\tab}{\tab}		is trailing space matching the viewable dimension of the grid less the dimension of{\line}
{\tab}{\tab}		the final item.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		You may query the virtual position of an item within the virtual area of{\line}
{\tab}{\tab}		Current via {\cf5 virtual_x_position} and {\cf5 virtual_y_position} directly on the{\line}
{\tab}{\tab}		item. You may also query the dimensions of an item via {\cf5 width} and {\cf5 height}. It{\line}
{\tab}{\tab}		is important to note that for an item that is part of a tree structure, the{\line}
{\tab}{\tab}		{\cf5 width} may not be equal to column.width and the {\cf5 virtual_x_position} may not{\line}
{\tab}{\tab}		be equal to column.virtual_x_position. This is because items in tree{\line}
{\tab}{\tab}		structures are indented to provide space for the expand/collapse icons as{\line}
{\tab}{\tab}		necessary. The number of pixels that the item is indented for this purpose may{\line}
{\tab}{\tab}		be queried directly from the item via a call{\line}
{\tab}{\tab}		to horizontal_indent.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		You may query the virtual y position of a row within Current via{\line}
{\tab}{\tab}		{\cf5 virtual_y_position} directly on the row.{\line}
{\tab}{\tab}		You may query the virtual x position of a column within Current via{\line}
{\tab}{\tab}		{\cf5 virtual_x_position} directly on the column.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		As items, columns or rows are added and removed from Current, the virtual size{\line}
{\tab}{\tab}		may change. The virtual position may only change if in this situation, you are{\line}
{\tab}{\tab}		removing rows or columns that cause the virtual size to reduce and the virtual{\line}
{\tab}{\tab}		position is no longer valid. The grid will automatically adjust the virtua{\line}
{\tab}{\tab}		position so that the contents of the viewable area are completely contained{\line}
{\tab}{\tab}		within the new virtual position.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The {\cf5 height} of the rows displayed in Current is dependent on{\line}
{\tab}{\tab}		{\cf5 is_row_height_fixed}. If True,  then all rows are displayed at the same{\line}
{\tab}{\tab}		height, goverened by {\cf5 row_height}. If False, then the height of the row is{\line}
{\tab}{\tab}		goverened by its {\cf5 height} property which may differ on an individual row basis.{\line}
{\tab}{\tab}		The width of columns is always unique and based on their {\cf5 width} property.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		To determine if a particular item is located at a virtual position, use{\line}
{\tab}{\tab}		{\cf5 item_at_virtual_position}. You may determine the first and last visible rows{\line}
{\tab}{\tab}		via {\cf5 first_visible_row} and {\cf5 last_visible_row}, while {\cf5 first_visible_column} and{\line}
{\tab}{\tab}		{\cf5 last_visible_column} give the first and last columns visible in Current. For{\line}
{\tab}{\tab}		more precise information regarding exactly which rows and columns are displayed,{\line}
{\tab}{\tab}		you may query {\cf5 visible_row_indexes} and {\cf5 visible_column_indexes}. Note that if a{\line}
{\tab}{\tab}		tree is enabled via {\cf5 enable_tree}, then the contents of {\cf5 visible_row_indexes}{\line}
{\tab}{\tab}		and {\cf5 visible_column_indexes} may not be contiguous.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		To optimize performance, Current  only performs recomputation of the virtual{\line}
{\tab}{\tab}		positions of items as strictly necessary, which is normally once just before a{\line}
{\tab}{\tab}		redraw. As you may query virtual position information whenever you wish,{\line}
{\tab}{\tab}		Current may be forced to perform its recomputation of virtual positions as a{\line}
{\tab}{\tab}		result of your query. Each time that you modify something in the grid that may{\line}
{\tab}{\tab}		affect a virtual position of an item, the grid must recompute the virtual{\line}
{\tab}{\tab}		positions again as required. Therefore, for your code to be optimal, it may be{\line}
{\tab}{\tab}		necessary to take this into account. The worst possible case scenario is if you{\line}
{\tab}{\tab}		are to iterate from the start of the grid to the end of the grid and modify the{\line}
{\tab}{\tab}		state of each item or row during the iteration before querying a virtual position{\line}
{\tab}{\tab}		of an object in the grid past the current iteration position. In this situation,{\line}
{\tab}{\tab}		it is recommended that you perform a two-pass operation. First perform all of the{\line}
{\tab}{\tab}		modifications to the items and then perform all of the queries to virtual{\line}
{\tab}{\tab}		positions. The grid is optimized for additions in order so if you are repeatedly{\line}
{\tab}{\tab}		adding items and querying their virtual positions, then the performance is far{\line}
{\tab}{\tab}		better than if you are continuously inserting items at the start of the grid and{\line}
{\tab}{\tab}		querying their virtual positions. Although it is important to be aware of this{\line}
{\tab}{\tab}		behavior, you will find that in almost all cases, you have do perform no special{\line}
{\tab}{\tab}		optimizations to get good performance within Current. This also aplies to{\line}
{\tab}{\tab}		removal of rows. If you have many rows to remove, start with the final rows and{\line}
{\tab}{\tab}		iterate towards the first for increased performance.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The re-drawing of Current is performed on idle, so if you are performing heavy{\line}
{\tab}{\tab}		computation and the grid is not updating, call process_events from{\line}
{\tab}{\tab}		EV_APPLICATION in order to force a re-draw.{\line}
{\tab}{\tab}		--------------------------------------------------------------------------------{\line}
{\tab}{\tab}		Appearance:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Each of the items contained within the grid are sized based on the column and{\line}
{\tab}{\tab}		row that they occupy. If {\cf5 is_row_height_fixed} is True then the height of the{\line}
{\tab}{\tab}		rows is dependent on {\cf5 row_height} of Current, otherwise it is dependent on{\line}
{\tab}{\tab}		{\cf5 height} of the row and each row may occupy a different height. For the first{\line}
{\tab}{\tab}		non-Void item of each row, the position of the item is item.horizontal_indent{\line}
{\tab}{\tab}		pixels greater than the column in which it is contained. The appearance of each{\line}
{\tab}{\tab}		item is dependent on the actual type of the item, but there are a number of{\line}
{\tab}{\tab}		ways in which you may modify this at the grid level.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		post_draw_overlay_function is available, which permits you to draw directly on{\line}
{\tab}{\tab}		top of items immediately after they are dwan by the implementation. This is{\line}
{\tab}{\tab}		useful for adding custom borders to your items.{\line}
{\tab}{\tab}		pre_draw_overlay_function is available, which permits you to draw on top of the{\line}
{\tab}{\tab}		background of items, but before any features of that item have been drawn. For{\line}
{\tab}{\tab}		example, for grid label items, the background is cleared, then the function is{\line}
{\tab}{\tab}		called and then the text and pixmap are drawn. Note that for drawable items,{\line}
{\tab}{\tab}		which do not re-draw their background automatically, nothing is drawn before the{\line}
{\tab}{\tab}		pre_draw_overlay_function is called.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		When items are selected in a focused grid, they become highlighted in{\line}
{\tab}{\tab}		{\cf5 focused_selection_color} and if the grid does not have the focus,{\line}
{\tab}{\tab}		{\cf5 non_focused_selection_color} is used instead. It is recommended that you use{\line}
{\tab}{\tab}		these colors for your own drawable items to maintain consistency within the grid.{\line}
{\tab}{\tab}		The selection colors may be modified via {\cf5 set_focused_selection_color} and{\line}
{\tab}{\tab}		{\cf5 set_non_focused_selection_color}.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Separators between items may be enabled on the grid via {\cf5 enable_column_separators}{\line}
{\tab}{\tab}		and {\cf5 enable_row_separators} which ensure a single line is drawn between each row{\line}
{\tab}{\tab}		and column in {\cf5 separator_color}. Use {\cf5 set_separator_color} to modify this color.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The tree structure of Current is drawn using {\cf5 expand_node_pixmap} and{\line}
{\tab}{\tab}		{\cf5 collapse_node_pixmap} to illustrate the expanded state of rows with subrows. You{\line}
{\tab}{\tab}		may use your own pixmaps by calling set_expand_node_pixmap and{\line}
{\tab}{\tab}		set_collapse_node_pixmap. The indent applied to each subrow is based on the{\line}
{\tab}{\tab}		current width of the node pixmaps + {\cf5 subrow_indent}. You may increase this indent{\line}
{\tab}{\tab}		by calling {\cf5 set_subrow_indent}. The nodes in the tree are connected via lines drawn{\line}
{\tab}{\tab}		in the color {\cf5 tree_node_connector_color} which may be modified via{\line}
{\tab}{\tab}		{\cf5 set_tree_node_connector_color}. These connecting lines may also be hidden via a{\line}
{\tab}{\tab}		call to {\cf5 hide_tree_node_connectors}.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		During a column resize in Current, the contents of the grid are immediately{\line}
{\tab}{\tab}		refreshed. This behavior may be disabled via a call to disable_column_resize_immedite{\line}
{\tab}{\tab}		and may be necessary if running the grid on older systems as it is less processor{\line}
{\tab}{\tab}		intensive. When not {\cf5 is_column_resize_immediate}, the column resizing is only performed{\line}
{\tab}{\tab}		when the user completes the resize, but a divider may be shown in Current which indicates{\line}
{\tab}{\tab}		its new width during the resizing, by calling {\cf5 enable_resizing_divider}. This divider{\line}
{\tab}{\tab}		may be solid or dashed, based on the state of {\cf5 is_resizing_divider_solid}, settable via{\line}
{\tab}{\tab}		enable_resizing_divider_solid or disable_resizing_divider_solid.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		If you wish to perform multiple updates to the grid, in most cases the graphical{\line}
{\tab}{\tab}		update is buffered until the system becomes idle, thereby reducing flicker.{\line}
{\tab}{\tab}		However, in some situations, it is possible that the system may become idle{\line}
{\tab}{\tab}		during the updates, which may lead to flicker. In situations such as these, you{\line}
{\tab}{\tab}		may use {\cf5 lock_update} to prevent graphical updates from occurring in the grid{\line}
{\tab}{\tab}		until {\cf5 unlock_update} is called. While the grid {\cf5 is_locked}, no graphical updates{\line}
{\tab}{\tab}		of any form are performed.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		--------------------------------------------------------------------------------{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Selection:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The grid allows both single and multiple selection handling on an item or row level.{\line}
{\tab}{\tab}		When enable_single_item_selection is called, only an single item may be selected by the{\line}
{\tab}{\tab}		user when Current is on-screen.  Selection may occur either programmatically via the{\line}
{\tab}{\tab}		enable_select routine of either the item/column or row or on-screen via mouse or keyboard.{\line}
{\tab}{\tab}		This is accompanied with the query is_selected.  When a user attempts to select an item or{\line}
{\tab}{\tab}		row on-screen the grid attempts to make that item or row more visible to the user so that the{\line}
{\tab}{\tab}		text of the item may be read, this will not occur however if the item is currently activated.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		There are two main selection modes, item selection and row selection.  In item selection,{\line}
{\tab}{\tab}		single or multiple items may be selected depending on the current selection mode.  This can be{\line}
{\tab}{\tab}		set with {\cf5 enable_single_item_selection} and {\cf5 enable_multiple_item_selection} respectively.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		For each type of selection there are events.  Examples of such events are {\cf5 item_select_actions},{\line}
{\tab}{\tab}		{\cf5 row_select_actions} and {\cf5 column_select_actions}, these are fired in Current, with the{\line}
{\tab}{\tab}		appropriate object being passed to the action sequence that is selected. {\cf5 item_select_actions}{\line}
{\tab}{\tab}		will only get executed whilst in either single or multiple item selection mode. For handling selection{\line}
{\tab}{\tab}		events during single or multiple row selection modes, {\cf5 row_select_actions} should be used.{\line}
{\tab}{\tab}		To keep track of deselected items, rows or columns, there is {\cf5 item_deselect_actions},{\line}
{\tab}{\tab}		{\cf5 row_deselect_actions} and {\cf5 column_deselect_actions} respectively.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Along with selecting items, they may also be deselected.  This can be done programatically{\line}
{\tab}{\tab}		via the disable_select routine of either the item/column or row.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		To query what objects are selected, the following queries are available in Current,{\line}
{\tab}{\tab}		{\cf5 selected_items}, {\cf5 selected_rows} and {\cf5 selected_columns}.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		To turn off any default behavior the following queries are available, {\cf5 disable_selection_key_handling}{\line}
{\tab}{\tab}		and disable_selection_click_handling, this turns off the ability for the user of the grid{\line}
{\tab}{\tab}		to select items via the keyboard or mouse.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The routine {\cf5 enable_always_selected} makes sure that at least one item or row is selected depending{\line}
{\tab}{\tab}		on the mode after the initial selection.  This can be handy for implementing widgets that require an item{\line}
{\tab}{\tab}		be selected at all times.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The selection of the grid may be removed with {\cf5 remove_selection}.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		--------------------------------------------------------------------------------{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Item Activation:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Activation allows for interactive editing of the contents of an item. By calling{\line}
{\tab}{\tab}		activate on an activatable item in response to a user event such as double clicking,{\line}
{\tab}{\tab}		the item allows for in-place user editing, for changing things such as text.  After{\line}
{\tab}{\tab}		changing the item, the user may complete the activation by pressing Enter on the{\line}
{\tab}{\tab}		keyboard or by causing the item itself to loose focus.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		To programmatically cancel any activation, each grid item has a deactivate routine{\line}
{\tab}{\tab}		that may be called during the activation.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		If an activation occurs during a user selection then the grid itself will not attempt to reposition{\line}
{\tab}{\tab}		the item so that it is more visible.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		When an item is activated, the {\cf5 item_activate_actions} are fired, this can be used{\line}
{\tab}{\tab}		to customize the activation process of a certain item, {\cf5 item_deactivate_actions} are{\line}
{\tab}{\tab}		fired when the item is deactivated.  When an item is deactivated, if the user hasn't{\line}
{\tab}{\tab}		cancelled the deactivation then the item's contents are updated.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		See EV_GRID_EDITABLE_ITEM and EV_GRID_COMBO_ITEM for examples of activatable items{\line}
{\tab}{\tab}		that allow for in place editing.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		--------------------------------------------------------------------------------{\line}
{\tab}{\tab}		Event Handling:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The standard set of widget events are inherited from EV_CELL with an additional{\line}
{\tab}{\tab}		set of events that are applicable to both Current and the items contained are{\line}
{\tab}{\tab}		inherited from EV_GRID_ACTION_SEQUENCES. For example,{\line}
{\tab}{\tab}		{\cf5 pointer_button_press_actions} is inherited from EV_CELL, while{\line}
{\tab}{\tab}		{\cf5 pointer_button_press_item_actions} is inherited from EV_GRID_ACTION_SEQUENCES{\line}
{\tab}{\tab}		and has an EV_GRID_ITEM as event data specifying the applicable item (if any).{\line}
{\tab}{\tab}		The coordinates of the item specific versions use virtual coordinates of{\line}
{\tab}{\tab}		Current as their coordinate information, wheras those inherited from EV_CELL{\line}
{\tab}{\tab}		use client coordinates as for any other EV_WIDGET. The order of event execution{\line}
{\tab}{\tab}		for multiple action sequences that may be triggered by a single event are as{\line}
{\tab}{\tab}		follows:{\line}
{\tab}{\tab}		1. The standard inherited widget events are fired. i.e.{\line}
{\tab}{\tab}			"grid.pointer_button_press_actions" The x and y coordinate event data is{\line}
{\tab}{\tab}			relative to the upper left corner of Current.{\line}
{\tab}{\tab}		2. The grid item specific versions of these events are fired. i.e.{\line}
{\tab}{\tab}			"grid.pointer_button_press_item_actions" The x and y coordinate event data is{\line}
{\tab}{\tab}			relative to the upper left corner of the "item" area of Current, in virtual{\line}
{\tab}{\tab}			grid coordinates. These events are only fired while the mouse pointer is above{\line}
{\tab}{\tab}			the "item" area (does not include header and scroll bars).{\line}
{\tab}{\tab}		3. The events are fired on the item themselves. i.e.{\line}
{\tab}{\tab}			"item.pointer_button_press_actions" The x and y coordinate event data is{\line}
{\tab}{\tab}			relative to the upper left corner of the item.{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		The grid specific versions of particular events permit you to perform handling{\line}
{\tab}{\tab}		for all of your items in a common place and are always fired before the specific{\line}
{\tab}{\tab}		item versions. For example, if you connect to both EV_GRID.row_expand_actions{\line}
{\tab}{\tab}		and EV_GRID_ROW.expand_actions, the grid version is fired first, immediately by{\line}
{\tab}{\tab}		the row version. The action sequences are fired one immediately after the other{\line}
{\tab}{\tab}		and both are always fired even if you change states of the target object within{\line}
{\tab}{\tab}		the first action sequence.{\line}
{\tab}{\tab}		--------------------------------------------------------------------------------{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Color Handling:{\line}
{\tab}{\tab}{\line}
{\tab}{\tab}		Colors applied to items within Current are determined on a three level basis.{\line}
{\tab}{\tab}		The base level is Current whose {\cf5 foreground_color} and {\cf5 background_color} may{\line}
{\tab}{\tab}		never be Void.{\line}
{\tab}{\tab}		The second level are the columns and rows of Current whose {\cf5 foreground_color}{\line}
{\tab}{\tab}		and {\cf5 background_color} are Void by default.{\line}
{\tab}{\tab}		The final level is comprised of the items of Current themselves whose{\line}
{\tab}{\tab}		{\cf5 foreground_color} and {\cf5 background_color} are Void by default.{\line}
{\tab}{\tab}		As Current performs a  re-draw of an item "cell" contained within, the{\line}
{\tab}{\tab}		following rules are applied in order to determine the displayed colors:{\line}
{\tab}{\tab}		1. If there is an item in the "cell" which has a non-Void {\cf5 foreground_color} or{\line}
{\tab}{\tab}		{\cf5 background_color} then these colors are applied to the contents of that "cell",{\line}
{\tab}{\tab}		otherwise, step 2 is applied.{\line}
{\tab}{\tab}		2. If the column or row at that position has non-Void {\cf5 foreground_color} or{\line}
{\tab}{\tab}		{\cf5 background_color} then these colors are applied to the contents of that "cell",{\line}
{\tab}{\tab}		otherwise step 3 is applied.{\line}
{\tab}{\tab}		3. As the colors of the item, row and column were all Void, the foreground{\line}
{\tab}{\tab}		and {\cf5 background_color} of Current is applied to the contents of that "cell".{\line}
{\tab}{\tab}		Note that for areas of an items "cell" that are not filled by item item itself,{\line}
{\tab}{\tab}		such as the area of a tree structure, step 1 is ignored and the color{\line}
{\tab}{\tab}		calculations begin at step 2.{\line}
{\tab}]"{\line}
{\tab}{\cf1 legal}{\cf1 :} "See notice at end of class."{\line}
{\tab}{\cf1 status}{\cf1 :} "See notice at end of class."{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2016-09-27 15:50:48 +0000 (Tue, 27 Sep 2016) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 99192 $"{\line}
{\line}
{\b\cf6 class} {\b\cf6 interface}{\line}
{\tab}{\cf4 EV_GRID}{\line}
{\line}
{\b\cf6 create} {\line}
{\tab}{\cf5 {\cf5 default_create}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Standard creation procedure.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_coupled}{\cf1 :} {\cf5 implementation} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_initialized}{\cf1 :} {\cf5 is_initialized}{\line}
{\tab}{\tab}{\tab}{\cf1 default_create_called}{\cf1 :} {\cf5 default_create_called}{\line}
{\tab}{\tab}{\tab}{\cf1 is_in_default_state}{\cf1 :} {\cf5 is_in_default_state}{\line}
}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 accept_cursor}{\cf1 :} {\cf4 EV_POINTER_STYLE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  is cursor displayed when the screen pointer is over a}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  target that accepts }{\cf5 pebble}{\cf3  during pick and drop.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 cursor_valid}{\cf1 :} {\cf1 (}{\b\cf6 attached} {\cf5 implementation}{\b\cf1 .}{\cf5 accept_cursor} {\b\cf6 implies} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 accept_cursor}{\cf1 )} {\b\cf6 or else} {\b\cf6 Result} {\cf1 =} {\cf5 Default_pixmaps}{\b\cf1 .}{\cf5 Standard_cursor}{\line}
}{\line}
{\tab}{\cf5 {\cf5 activated_item}{\cf1 :} {\cf4 EV_GRID_ITEM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Item that has currently been activated, if any.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 actual_drop_target_agent}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Overrides default drop target on a certain position.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 Void}{\cf3 , }{\cf5 Current}{\cf3  will use the default drop target.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 actual_drop_target_agent}{\line}
}{\line}
{\tab}{\cf5 {\cf5 are_column_separators_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is a vertical separator displayed in color }{\cf5 separator_color}{\cf3  between each column?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 are_row_separators_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is a horizontal separator displayed in color }{\cf5 separator_color}{\cf3  between each row?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 are_tree_node_connectors_shown}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are connectors between tree nodes shown in }{\cf5 Current}{\cf3 ?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 background_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color displayed behind foreground features.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_COLORIZABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 implementation}{\b\cf1 .}{\cf5 background_color}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_background_pixmap}{\cf1 :} {\cf4 EV_PIXMAP}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  is pixmap displayed on background of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  It is tessellated and fills whole of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PIXMAPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PIXMAPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\cf1 (}{\b\cf6 Result} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 implementation}{\b\cf1 .}{\cf5 background_pixmap} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or} {\cf1 (}{\b\cf6 attached} {\b\cf6 Result} {\b\cf6 and then} {\b\cf6 attached} {\cf5 implementation}{\b\cf1 .}{\cf5 background_pixmap} {\b\cf6 as} l_pixmap {\b\cf6 and then} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 l_pixmap}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 collapse_node_pixmap}{\cf1 :} {\cf4 EV_PIXMAP}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pixmap displayed within tree structures when a row with one or more}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  subrows is expanded. Clicking the area occupied by this pixmap in }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  collapses the row.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 column} {\cf1 (}{\cf5 a_column}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_COLUMN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Column at index }{\cf5 a_column}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_positive}{\cf1 :} {\cf5 a_column} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_not_greater_than_column_count}{\cf1 :} {\cf5 a_column} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 column_at_virtual_position} {\cf1 (}{\cf5 a_virtual_x}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_COLUMN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Column at virtual x position }{\cf5 a_virtual_x}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 column_deselect_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 EV_GRID_COLUMN}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a column is deselected}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 column_select_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 EV_GRID_COLUMN}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a column is selected}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 configurable_target_menu_handler}{\cf1 :} {\cf4 PROCEDURE} {\cf1 [}{\cf4 EV_MENU}{\cf1 ,} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_PND_TARGET_DATA}{\cf1 ]}{\cf1 ,} {\cf4 EV_PICK_AND_DROPABLE}{\cf1 ,} {\cf4 ANY}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Agent used for customizing the Pick and Drop Target Menu of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 data}{\cf1 :} {\cf4 ANY}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arbitrary user data may be stored here.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ANY}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_identifier_name}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default name if no other name is set.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_IDENTIFIABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_IDENTIFIABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_empty}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\tab}{\cf1 no_period_in_result}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}'.'{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 default_key_processing_handler}{\cf1 :} {\cf4 PREDICATE} {\cf1 [}{\cf4 EV_KEY}{\cf1 ]} {\b\cf6 assign} {\cf5 set_default_key_processing_handler}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Agent used to determine whether the default key processing should occur for Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If agent returns True then default key processing continues as normal, False prevents}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  default key processing from occurring.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 default_key_processing_handler}{\line}
}{\line}
{\tab}{\cf5 {\cf5 deny_cursor}{\cf1 :} {\cf4 EV_POINTER_STYLE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  is cursor displayed when the screen pointer is over a}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  target that does not accept }{\cf5 pebble}{\cf3  during pick and drop.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 cursor_valid}{\cf1 :} {\cf1 (}{\b\cf6 attached} {\cf5 implementation}{\b\cf1 .}{\cf5 deny_cursor} {\b\cf6 implies} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 deny_cursor}{\cf1 )} {\b\cf6 or else} {\b\cf6 Result} {\cf1 =} {\cf5 Default_pixmaps}{\b\cf1 .}{\cf5 No_cursor}{\line}
}{\line}
{\tab}{\cf5 {\cf5 displayed_column} {\cf1 (}{\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_COLUMN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 i}{\cf3 -th displayed column. May not correspond}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 column}{\cf3  if one or more columns have been}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 - hidden via }{\cf5 hide}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 i_positive}{\cf1 :} {\cf5 i} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 i_not_greater_than_displayed_column_count}{\cf1 :} {\cf5 i} {\cf1 <=} {\cf5 displayed_column_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 dynamic_content_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Function which computes the item that resides in a particular position of the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  grid while }{\cf5 is_content_partially_dynamic}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 expand_node_pixmap}{\cf1 :} {\cf4 EV_PIXMAP}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pixmap displayed within tree structures when a row with one or more}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  subrows is collapsed. Clicking the area occupied by this pixmap in }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  expands the row.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 fill_background_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 EV_DRAWABLE}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when part of the background area of the grid that is outside of the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  area filled by }{\cf5 row_count}{\cf3  and }{\cf5 column_count}{\cf3  needs to be redrawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  By default, the grid fills the area in its }{\cf5 background_color}{\cf3 . If one or more agents are}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  contained in this action sequence, the grid is no longer responsible for drawing its background}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  and the agents must redraw this area, otherwise graphical glitches may appear.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The five pieces of event data passed are:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  drawable: EV_DRAWABLE The drawable into which you must draw the background.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  virtual_x: INTEGER The virtual x position of the area to be redrawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  virtual_y: INTEGER The virtual y position of the area to be redrawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  width: INTEGER The width of the area that must be redrawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  height: INTEGER The height of the area that must be redrawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The upper left corner of the drawing must start at 0x0 in }{\cf5 drawable}{\cf3  with an area given by }{\cf5 width}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  and }{\cf5 height}{\cf3 . The virtual coordinates specify the position of the area in relation to the grid's}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  virtual positiion which is essential if you wish to draw something such as a texture which must be}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  matched based on its position.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Note that }{\cf5 fill_background_actions}{\cf3  may be fired multiple times to fill the complete area of the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  background that is invalid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 focused_selection_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color used to show selection within items while focused.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 focused_selection_text_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color used to for text of selected items while focused.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 foreground_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color of foreground features like text.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_COLORIZABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 implementation}{\b\cf1 .}{\cf5 foreground_color}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 full_identifier_path}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Full name of object by prepending path of parent}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Uses '.' as a separator.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_IDENTIFIABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_IDENTIFIABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 result_correct}{\cf1 :} {\cf5 parent} {\cf1 =} {\b\cf6 Void} {\b\cf6 implies} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 identifier_name}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 result_correct}{\cf1 :} {\b\cf6 attached} {\cf5 parent} {\b\cf6 as} l_parent {\b\cf6 implies} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 l_parent}{\b\cf1 .}{\cf5 full_identifier_path} {\cf1 +} "." {\cf1 +} {\cf5 identifier_name}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 generating_type}{\cf1 :} {\cf4 TYPE} {\cf1 [}{\cf4 EV_GRID}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Type of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generating_type_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 generator}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of current object's generating class}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (base class of the type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_empty}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_has} {\cf1 (}{\cf5 v}{\cf1 :} {\cf4 EV_WIDGET}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does }{\cf5 Current}{\cf3  include }{\cf5 v}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_found_in_empty}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\b\cf6 not} {\cf5 cell_is_empty}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_has_recursive} {\cf1 (}{\cf5 an_item}{\cf1 :} {\b\cf6 like} {\cf5 cell_item}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does structure include }{\cf5 an_item}{\cf3  or}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  does any structure recursively included by structure,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  include }{\cf5 an_item}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 header}{\cf1 :} {\cf4 EV_GRID_HEADER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Header control used for resizing columns of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 help_context}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_HELP_CONTEXT}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Agent that evaluates to help context sent to help engine when help is requested}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_HELP_CONTEXTABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_HELP_CONTEXTABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_HELP_CONTEXTABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 help_context}{\line}
}{\line}
{\tab}{\cf5 {\cf5 horizontal_scroll_bar}{\cf1 :} {\cf4 EV_HORIZONTAL_SCROLL_BAR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Horizontal scrollbar used for scrolling }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Use }{\cf5 is_horizontal_scroll_bar_show_requested}{\cf3  to find out if scrollbar will be shown if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  needed (i.e. when }{\cf5 virtual_width}{\cf3  is greater than }{\cf5 viewable_width}{\cf3 ).}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 id_object} {\cf1 (}{\cf5 an_id}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Object associated with }{\cf5 an_id}{\cf3  (void if no such object)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf1 consistent}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\b\cf6 Void} {\b\cf6 or else} {\b\cf6 Result}{\b\cf1 .}{\cf5 object_id} {\cf1 =} {\cf5 an_id}{\line}
}{\line}
{\tab}{\cf5 {\cf5 identifier_name}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If no specific name is set, }{\cf5 default_identifier_name}{\cf3  is used.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_IDENTIFIABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_IDENTIFIABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_empty}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\tab}{\cf1 no_period_in_result}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}'.'{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 default_name_available}{\cf1 :} {\b\cf6 not} {\cf5 has_identifier_name_set} {\b\cf6 implies} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 default_identifier_name}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_column_resize_immediate}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the user resizing of a column reflected immediately in }{\cf5 Current}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3 , the column width is updated continuosly and the state of }{\cf5 is_resizing_divider_enabled}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is ignored with no divider displayed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 False}{\cf3 , the column width is only updated upon completion of the resize.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_content_partially_dynamic}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the content of }{\cf5 Current}{\cf3  partially dynamic? If }{\cf5 True}{\cf3  then}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  whenever an item must be re-drawn and it is not already set within }{\cf5 Current}{\cf3 ,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  then it is queried via execution of }{\cf5 dynamic_content_function}{\cf3 . The returned item is added}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 Current}{\cf3  so the query only occurs once.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_docking_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May }{\cf5 Current}{\cf3  be docked to?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If True, }{\cf5 Current}{\cf3  will accept docking}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  from a compatible EV_DOCKABLE_SOURCE.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_TARGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 is_docking_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_full_redraw_on_virtual_position_change_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is complete client area invalidated as a result of virtual position changing?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Note that enabling this causes a large performance penalty in redrawing during}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  scrolling, but may be used to achieve effects not otherwise possible unless the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  entire client area is invalidated.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_header_displayed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the header displayed in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_horizontal_overscroll_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does the virtual width of }{\cf5 Current}{\cf3  include the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  position of the final column plus the }{\cf5 viewable_width}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3 , this enables horizontal scrolling until the last column}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is at the very left of the viewable area. If }{\cf5 False}{\cf3 , scrolling}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  may be performed until the last column is at the left of the viewable}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  area.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_horizontal_scrolling_per_item}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is horizontal scrolling performed on a per-item basis?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3 , each change of the horizontal scroll bar increments the horizontal}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  offset by the current column width.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 False}{\cf3 , the scrolling is smooth on a per-pixel basis.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_locked}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are all graphical updates to }{\cf5 Current}{\cf3  suppressed until}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 unlock_update}{\cf3  is called.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_resizing_divider_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is a vertical divider displayed during column resizing?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Note that if }{\cf5 is_column_resize_immediate}{\cf3  is }{\cf5 True}{\cf3 , }{\cf5 Result}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is ignored by }{\cf5 Current}{\cf3  and no resizing divider is displayed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_resizing_divider_solid}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is resizing divider displayed during column resizing drawn as a solid line?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 False}{\cf3 , a dashed line style is used.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_row_height_fixed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Must all rows in }{\cf5 Current}{\cf3  have the same height?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_vertical_overscroll_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does the virtual height of }{\cf5 Current}{\cf3  include the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  position of the final row plus the }{\cf5 viewable_height}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3 , this enables vertical scrolling until the last row}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is at the very top of the viewable area. If }{\cf5 False}{\cf3 , scrolling}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  may be performed until the last row is at the bottom of the viewable}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  area.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_vertical_scrolling_per_item}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is vertical scrolling performed on a per-item basis?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3 , each change of the vertical scroll bar increments the vertical}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  offset by the current row height.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 False}{\cf3 , the scrolling is smooth on a per-pixel basis.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_item}{\cf1 :} {\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Current item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 readable}{\cf1 :} {\cf5 Readable}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 interface_item}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item} {\cf1 (}{\cf5 a_column}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 a_row}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_ITEM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Cell at }{\cf5 a_row}{\cf3  and }{\cf5 a_column}{\cf3  position, Void if none.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_positive}{\cf1 :} {\cf5 a_column} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_less_than_column_count}{\cf1 :} {\cf5 a_column} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_positive}{\cf1 :} {\cf5 a_row} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_less_than_row_count}{\cf1 :} {\cf5 a_row} {\cf1 <=} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_accept_cursor_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 EV_POINTER_STYLE}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Function used to retrieve the PND accept cursor for a particular item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Called directly after }{\cf5 item_pebble_function}{\cf3  has executed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_activate_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 EV_POPUP_WINDOW}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed to override the default }{\cf5 activate}{\cf3  setup of an item, see }{\cf1 \{}{\cf4 EV_GRID_EDITABLE_ITEM}{\cf1 \}}{\b\cf1 .}{\cf5 activate_action}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Useful for repositioning }{\cf5 popup_window}{\cf3 , which will then be shown automatically by the grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments of TUPLE (with names for clarity):}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  activate_item: EV_GRID_ITEM -- The item that is currently activated.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  popup_window: EV_POPUP_WINDOW -- The popup window used to interactively edit }{\cf5 activate_item}{\cf3 , window has already been sized and positioned.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_at_virtual_position} {\cf1 (}{\cf5 a_virtual_x}{\cf1 ,} {\cf5 a_virtual_y}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_ITEM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Cell at virtual position }{\cf5 a_virtual_x}{\cf3 , }{\cf5 a_virtual_y}{\cf3  or}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Void}{\cf3  if none.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_deactivate_actions}{\cf1 :} {\cf4 EV_GRID_ITEM_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when an item has been deactivated.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_deny_cursor_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 EV_POINTER_STYLE}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Function used to retrieve the PND deny cursor for a particular item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Called directly after }{\cf5 item_pebble_function}{\cf3  has executed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_deselect_actions}{\cf1 :} {\cf4 EV_GRID_ITEM_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when an item is deselected.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_drop_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 ANY}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pebble is dropped on an item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_pebble_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 ANY}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returns data to be transported by pick and drop mechanism.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  It will be called once each time a pick on the item area of the grid occurs, the result}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  will be assigned to }{\cf5 pebble}{\cf3  for the duration of transport.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  When a pick occurs on an item, the item itself is passed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If a pick occurs and no item is present, then Void is passed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_select_actions}{\cf1 :} {\cf4 EV_GRID_ITEM_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when an item is selected.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 item_veto_pebble_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 ANY}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Function used to determine whether dropping is allowed on a particular item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  When called during PND transport, the grid item currently under the pebble}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  and the pebble itself are passed to the function.  A return value of True means}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  that the pebble is allowed to be dropped onto the item, a return value of False}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  disallows any PND transport.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 locked_columns}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_GRID_COLUMN}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All columns locked within }{\cf5 Current}{\cf3  in order of locking.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 locked_rows}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_GRID_ROW}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All rows locked within }{\cf5 Current}{\cf3  in order of locking.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 maximum_virtual_x_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Maximum permitted virtual x position based on current dimensions and properties.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Properties that affect this value are }{\cf5 is_vertical_scrolling_per_item}{\cf3  and}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 is_vertical_overscroll_enabled}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_non_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 maximum_virtual_y_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Maximum permitted virtual y position based on current dimensions and properties.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Properties that affect this value are }{\cf5 is_horizontal_scrolling_per_item}{\cf3  and}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 is_horizontal_overscroll_enabled}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_non_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 non_focused_selection_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color used to show selection within items while not focused.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 non_focused_selection_text_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color used for text of selected items while not focused.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 object_id}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Unique for current object in any given session}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_id}{\cf1 :} {\b\cf6 Result} {\cf1 >} 0 {\b\cf6 implies} {\cf5 id_object}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )} {\cf1 =} {\b\cf6 Current}{\line}
}{\line}
{\tab}{\cf5 {\cf5 parent}{\cf1 :} {\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Contains }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_IDENTIFIABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_IDENTIFIABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 correct}{\cf1 :} {\cf5 has_parent} {\b\cf6 implies} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 correct}{\cf1 :} {\b\cf6 not} {\cf5 has_parent} {\b\cf6 implies} {\b\cf6 Result} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 parent}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pebble}{\cf1 :} {\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Data to be transported by pick and drop mechanism.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 pebble}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pebble_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 ANY}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returns data to be transported by pick and drop mechanism.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 pebble_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pebble_positioning_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3  then pick and drop start coordinates are}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 pebble_x_position}{\cf3 , }{\cf5 pebble_y_position}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 False}{\cf3  then pick and drop start coordinates are}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the pointer coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 pebble_positioning_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pebble_x_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Initial x position for pick and drop relative to }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 pebble_x_position}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pebble_y_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Initial y position for pick and drop relative to }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 pebble_y_position}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_button_press_item_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pointer press event is received by a grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity):}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  x_pos: INTEGER -- The x position of the press in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  y_pos: INTEGER -- The y position of the press in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_button: INTEGER -- The index of the pressed button.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item: EV_GRID_ITEM -- If the press occurred above an item, this is the pointed item, otherwise argument is set to }{\cf5 Void}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_button_release_item_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pointer release event is received by a grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity):}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  x_pos: INTEGER -- The x position of the release in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  y_pos: INTEGER -- The y position of the release in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_button: INTEGER -- The index of the released button.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item: EV_GRID_ITEM -- If the release occurred above an item, this is the pointed item, otherwise argument is set to }{\cf5 Void}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_double_press_item_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pointer double press event is received by a grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity):}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  x_pos: INTEGER -- The x position of the double press in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  y_pos: INTEGER -- The y position of the double press in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_button: INTEGER -- The index of the pressed button.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item: EV_GRID_ITEM -- If the double press occurred above an item, this is the pointed item, otherwise argument is set to }{\cf5 Void}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_enter_item_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 BOOLEAN}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pointer enter event is received by a grid or grid item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity):}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on_grid: BOOLEAN -- Did the enter event occur for the grid?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item: EV_GRID_ITEM -- If the enter event occurred for an item, this is the item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Note that }{\cf5 on_grid}{\cf3  may be set to }{\cf5 True}{\cf3  and }{\cf5 item}{\cf3  may be non-Void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in the case where the pointer enters a grid at a location where there}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is an item contained.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_leave_item_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 BOOLEAN}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pointer leave event is received by a grid or grid item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity):}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on_grid: BOOLEAN -- Did the leave event occur for the grid?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item: EV_GRID_ITEM -- If the leave event occurred for an item, this is the item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Note that }{\cf5 on_grid}{\cf3  may be set to }{\cf5 True}{\cf3  and }{\cf5 item}{\cf3  may be non-Void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in the case where the pointer leaves a grid from a location where there}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  was an item contained.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_motion_item_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a screen pointer moves over a grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity):}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  x_pos: INTEGER -- The x position of the motion in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  y_pos: INTEGER -- The y position of the motion in grid virtual coordinates.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item: EV_GRID_ITEM -- If the motion occurred above an item, this is the pointed item, otherwise argument is set to }{\cf5 Void}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_position}{\cf1 :} {\cf4 EV_COORDINATE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Position of the screen pointer relative to }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_show_requested}{\cf1 :} {\cf5 is_show_requested}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_style}{\cf1 :} {\cf4 EV_POINTER_STYLE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Cursor displayed when pointer is over this widget.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 post_draw_overlay_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 EV_DRAWABLE}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed after an item cell in }{\cf5 Current}{\cf3   has been drawn. The four pieces of event data are:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  drawable: EV_DRAWABLE The drawable into which you may draw to overlay onto the already drawn item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  grid_item: EV_GRID_ITEM The item which has just been drawn, may be Void in the case that an}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item cell is being drawn which does not contain an item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_column_index: INTEGER The column index of the grid cell that has just been drawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_row_index: INTEGER The row index of the grid cell that has just been drawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  This is useful for drawing additional border styles or other such effects. The upper left corner}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the item cell starts at coordinates 0x0 in the passed drawable. All drawing Performed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in the drawable is clipped to }{\cf5 width}{\cf3  of the column at }{\cf5 a_column_index}{\cf3  and }{\cf5 height}{\cf3  of row at }{\cf5 a_row_index}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Note that the upper left corner of }{\cf5 drawable}{\cf3  corresponds to the upper left corner of the item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  cell and not the actual items horizontal position within the cell which may be greater than 0 if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the item is within a tree structure. Use }{\cf5 horizontal_indent}{\cf3  of the item to determine this.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pre_draw_overlay_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 EV_DRAWABLE}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed before the features of an item cell in }{\cf5 Current}{\cf3  have been drawn but after the background of}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the cell has been drawn. The four pieces of event data are:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  drawable: EV_DRAWABLE The drawable into which you may draw to overlay onto the already drawn background.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  grid_item: EV_GRID_ITEM The item which has just been drawn, may be Void in the case that an}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item cell is being drawn which does not contain an item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_column_index: INTEGER The column index of the grid cell that has just been drawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_row_index: INTEGER The row index of the grid cell that has just been drawn.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  This is useful for drawing additional border styles or other such effects. The upper left corner}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the item cell starts at coordinates 0x0 in the passed drawable. All drawing Performed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in the drawable is clipped to }{\cf5 width}{\cf3  of the column at }{\cf5 a_column_index}{\cf3  and }{\cf5 height}{\cf3  of row at }{\cf5 a_row_index}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Note that the upper left corner of }{\cf5 drawable}{\cf3  corresponds to the upper left corner of the item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  cell and not the actual items horizontal position within the cell which may be greater than 0 if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the item is within a tree structure. Use }{\cf5 horizontal_indent}{\cf3  of the item to determine this.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 real_target}{\cf1 :} {\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  is target used during a dockable transport if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  mouse pointer is above }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 real_target}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_selection}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure that }{\cf5 selected_items}{\cf3 , }{\cf5 selected_rows}{\cf3  and }{\cf5 selected_columns}{\cf3  are empty.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 selected_items_empty}{\cf1 :} {\cf5 selected_items}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\tab}{\cf1 selected_rows_empty}{\cf1 :} {\cf5 selected_rows}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\tab}{\cf1 selected_columns_empty}{\cf1 :} {\cf5 selected_columns}{\b\cf1 .}{\cf5 is_empty}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row} {\cf1 (}{\cf5 a_row}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_ROW}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Row at index }{\cf5 a_row}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_positive}{\cf1 :} {\cf5 a_row} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_not_greater_than_row_count}{\cf1 :} {\cf5 a_row} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_at_virtual_position} {\cf1 (}{\cf5 a_virtual_y}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 ignore_locked_rows}{\cf1 :} {\cf4 BOOLEAN}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_ROW}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Row at virtual y position }{\cf5 a_virtual_y}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_collapse_actions}{\cf1 :} {\cf4 EV_GRID_ROW_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a row is collapsed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_deselect_actions}{\cf1 :} {\cf4 EV_GRID_ROW_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a row is deselected.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_expand_actions}{\cf1 :} {\cf4 EV_GRID_ROW_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a row is expanded.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_height}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Height of all rows within }{\cf5 Current}{\cf3 . Only has an effect on }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  while }{\cf5 is_row_height_fixed}{\cf3 , otherwise the individual height of each}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  row is used directly.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_non_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_select_actions}{\cf1 :} {\cf4 EV_GRID_ROW_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a row is selected.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 selected_columns}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_GRID_COLUMN}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All columns selected in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returned list is unsorted so no particular ordering is guaranteed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 selected_items}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All items selected in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returned list is unsorted so no particular ordering is guaranteed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 selected_rows}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_GRID_ROW}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All rows selected in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returned list is unsorted so no particular ordering is guaranteed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 separator_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color used to display column and row separators.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 subrow_indent}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of pixels horizontally by which each subrow is indented}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  from its }{\cf5 parent_row}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_non_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 target_data_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\b\cf6 like} {\cf5 pebble}{\cf1 ,} {\cf4 EV_PND_TARGET_DATA}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Function for computing target meta data based on source pebble.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Primarily used for Pick and Drop target menu.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 note}{\line}
{\tab}{\tab}{\tab}option: stable{\line}
}{\line}
{\tab}{\cf5 {\cf5 target_name}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Optional textual name describing }{\cf5 Current}{\cf3  pick and drop hole.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 note}{\line}
{\tab}{\tab}{\tab}option: stable{\line}
}{\line}
{\tab}{\cf5 {\cf5 tooltip}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Tooltip displayed on }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 Result}{\cf3  is empty then no tooltip displayed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_TOOLTIPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_TOOLTIPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_TOOLTIPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\cf5 is_bridge_ok}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 cloned}{\cf1 :} {\cf5 is_cloned}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 vertical_scroll_bar}{\cf1 :} {\cf4 EV_VERTICAL_SCROLL_BAR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Vertical scrollbar used for scrolling }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Use }{\cf5 is_vertical_scroll_bar_show_requested}{\cf3  to find out if scrollbar will be shown if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  needed (i.e. when }{\cf5 virtual_height}{\cf3  is greater than }{\cf5 viewable_height}{\cf3 ).			}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 veto_dock_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_DOCKABLE_SOURCE}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Function to determine whether current dock is allowed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 Result}{\cf3  is }{\cf5 True}{\cf3 , dock will be disallowed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_TARGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 veto_dock_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 viewable_height}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Height of }{\cf5 Current}{\cf3  available to view displayed items. Does}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  not include width of any displayed scroll bars and/or header if shown.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 viewable_height_valid}{\cf1 :} {\cf5 is_displayed} {\b\cf6 implies} {\cf5 viewable_height} {\cf1 >=} 0 {\b\cf6 and} {\cf5 viewable_height} {\cf1 <=} {\cf5 height}{\line}
}{\line}
{\tab}{\cf5 {\cf5 viewable_width}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Width of }{\cf5 Current}{\cf3  available to view displayed items. Does}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  not include width of any displayed scroll bars.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 viewable_width_valid}{\cf1 :} {\cf5 is_displayed} {\b\cf6 implies} {\cf5 viewable_width} {\cf1 >=} 0 {\b\cf6 and} {\cf5 viewable_width} {\cf1 <=} {\cf5 width}{\line}
}{\line}
{\tab}{\cf5 {\cf5 viewable_x_offset}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Horizontal distance in pixels from the left edge of }{\cf5 Current}{\cf3  to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the left edge of the viewable area (defined by }{\cf5 viewable_width}{\cf3 , }{\cf5 viewable_height}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in which all content is displayed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 viewable_x_offset_valid}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0 {\b\cf6 and} {\b\cf6 Result} {\cf1 <=} {\cf5 width}{\line}
}{\line}
{\tab}{\cf5 {\cf5 viewable_y_offset}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Vertical distance in pixels from the top edge of }{\cf5 Current}{\cf3  to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the top edge of the viewable area (defined by }{\cf5 viewable_width}{\cf3 , }{\cf5 viewable_height}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in which all content is displayed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 viewable_y_offset_valid}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0 {\b\cf6 and} {\b\cf6 Result} {\cf1 <=} {\cf5 height}{\line}
}{\line}
{\tab}{\cf5 {\cf5 virtual_height}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Height of virtual area in pixels.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_non_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 virtual_position_changed_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed upon next idle after }{\cf5 virtual_x_position}{\cf3  or }{\cf5 virtual_y_position}{\cf3  changed in grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_virtual_x_position: INTEGER -- New }{\cf5 virtual_x_position}{\cf3  of grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_virtual_y_position: INTEGER -- New }{\cf5 virtual_y_position}{\cf3  of grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 virtual_size_changed_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed upon next idle after }{\cf5 virtual_width}{\cf3  or }{\cf5 virtual_height}{\cf3  changed in grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments (with names for clarity)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_virtual_width: INTEGER -- New }{\cf5 virtual_width}{\cf3  of grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_virtual_height: INTEGER -- New }{\cf5 virtual_height}{\cf3  of grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 virtual_width}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Width of virtual area in pixels.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_non_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 virtual_x_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Horizontal offset of viewable area in relation to the left edge of}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the virtual area in pixels.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_result}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0 {\b\cf6 and} {\b\cf6 Result} {\cf1 <=} {\cf5 maximum_virtual_x_position}{\line}
}{\line}
{\tab}{\cf5 {\cf5 virtual_y_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Vertical offset of viewable area in relation to the top edge of}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the virtual area in pixels.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_result}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0 {\b\cf6 and} {\b\cf6 Result} {\cf1 <=} {\cf5 maximum_virtual_y_position}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Measurement}{\line}
{\line}
{\tab}{\cf5 {\cf5 cell_client_height}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Height of the area available to children in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 client_height}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_client_width}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Width of the area available to children in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 client_width}{\line}
}{\line}
{\tab}{\cf5 {\cf5 dpi}{\cf1 :} {\cf4 NATURAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Window dpi}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 positive_or_zero}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 height}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Vertical size in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Same as }{\cf5 minimum_height}{\cf3  when not displayed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 height}{\line}
}{\line}
{\tab}{\cf5 {\cf5 minimum_height}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Lower bound on }{\cf5 height}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 minimum_height}{\line}
{\tab}{\tab}{\tab}{\cf1 positive_or_zero}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 minimum_width}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Lower bound on }{\cf5 width}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 minimum_width}{\line}
{\tab}{\tab}{\tab}{\cf1 positive_or_zero}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 screen_x}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Horizontal offset relative to screen.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 screen_x}{\line}
}{\line}
{\tab}{\cf5 {\cf5 screen_y}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Vertical offset relative to screen.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 screen_y}{\line}
}{\line}
{\tab}{\cf5 {\cf5 width}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Horizontal size in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Same as }{\cf5 minimum_width}{\cf3  when not displayed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 width}{\line}
}{\line}
{\tab}{\cf5 {\cf5 x_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Horizontal offset relative to parent }{\cf5 x_position}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 x_position}{\line}
}{\line}
{\tab}{\cf5 {\cf5 y_position}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Vertical offset relative to parent }{\cf5 y_position}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_POSITIONED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 y_position}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Comparison}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  or attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\cf5 a}{\cf1 ,} {\cf5 b}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 both_or_none_void}{\cf1 :} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\cf1 (}{\b\cf6 Result} {\b\cf6 and} {\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void}{\cf1 )}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 ,} {\cf5 a}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 equal} {\cf1 (}{\cf5 a}{\cf1 :} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to objects considered equal?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 is_deep_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_GRID}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 Current}{\cf3  and }{\cf5 other}{\cf3  attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_GRID}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object considered}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to current object?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 consistent}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical objects of the same type?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default object comparison criterion.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_GRID}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object of the same type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as current object, and field-by-field identical to it?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 are_columns_drawn_above_rows}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  For drawing purposes, are columns drawn above rows?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3 , for all cells within }{\cf5 Current}{\cf3  whose }{\cf5 column}{\cf3  and }{\cf5 row}{\cf3  have non-Void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  foreground or background colors, the column colors are given priority.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 False}{\cf3 , the colors of the row are given priority.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 column_displayed} {\cf1 (}{\cf5 a_column}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May column }{\cf5 a_column}{\cf3  be displayed when }{\cf5 Current}{\cf3  is?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will return False if }{\cf5 hide}{\cf3  has been called on column }{\cf5 a_column}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  A value of True does not signify that column }{\cf5 a_column}{\cf3  is visible on screen at that particular time.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_within_bounds}{\cf1 :} {\cf5 a_column} {\cf1 >} 0 {\b\cf6 and} {\cf5 a_column} {\cf1 <=} {\cf5 column_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 conforms_to} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does type of current object conform to type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of }{\cf5 other}{\cf3  (as per Eiffel: The Language, chapter 13)?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of items in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_CELL}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_result}{\cf1 :} {\b\cf6 Result} {\cf1 =} 0 {\b\cf6 or} {\b\cf6 Result} {\cf1 =} 1{\line}
}{\line}
{\tab}{\cf5 {\cf5 depth_in_tree} {\cf1 (}{\cf5 a_row_index}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Depth in tree for }{\cf5 a_row}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_index}{\cf1 :} 0 {\cf1 <} {\cf5 a_row_index} {\b\cf6 and} {\cf5 a_row_index} {\cf1 <=} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_extendible}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is there no element?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 EV_CELL}{\cf3  as synonym of }{\cf5 is_empty}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 find_next_item} {\cf1 (}{\cf5 a_row_index}{\cf1 ,} {\cf5 a_column_index}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 look_left}{\cf1 ,} {\cf5 a_is_tab_navigatable}{\cf1 :} {\cf4 BOOLEAN}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_ITEM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Find the next item horizontally in }{\cf5 grid_row}{\cf3  starting at index }{\cf5 starting_index}{\cf3 , if 'look_left' then the the item to the left/up is found, else it looks right/down.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 a_is_tab_navigatable}{\cf3  then Result must have 'is_tab_navigatable' set.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Result is Void if no item is found.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_index_valid}{\cf1 :} {\cf5 a_row_index} {\cf1 >} 0 {\b\cf6 and then} {\cf5 a_row_index} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_index_valid}{\cf1 :} {\cf5 a_column_index} {\cf1 >} 0 {\b\cf6 and then} {\cf5 a_column_index} {\cf1 <=} {\cf5 column_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 first_visible_column}{\cf1 :} {\cf4 EV_GRID_COLUMN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  First column visible in }{\cf5 Current}{\cf3  or Void if }{\cf5 column_count}{\cf3  = 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 is_horizontal_scrolling_per_item}{\cf3 , the first visible column may be only partially visible.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_displayed}{\cf1 :} {\cf5 is_displayed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 has_columns_implies_result_not_void}{\cf1 :} {\cf5 column_count} {\cf1 >} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 no_columns_implies_result_void}{\cf1 :} {\cf5 column_count} {\cf1 =} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 first_visible_row}{\cf1 :} {\cf4 EV_GRID_ROW}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  First row visible in }{\cf5 Current}{\cf3  or Void if }{\cf5 visible_row_count}{\cf3  = 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 is_vertical_scrolling_per_item}{\cf3 , the first visible row may be only partially visible.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_displayed}{\cf1 :} {\cf5 is_displayed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 has_rows_implies_result_not_void}{\cf1 :} {\cf5 visible_row_count} {\cf1 >} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 no_rows_implies_result_void}{\cf1 :} {\cf5 visible_row_count} {\cf1 =} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_full}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is structure filled to capacity?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_capture}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does widget have capture?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 has_capture}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_focus}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does widget have the keyboard focus?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 has_focus}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_identifier_name_set}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is a specific identifier name set?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_IDENTIFIABLE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_parent}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does identifiable has a parent?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_IDENTIFIABLE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_selected_column}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has selected column?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_implies_selected_columns_not_empty}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\b\cf6 not} {\cf5 selected_columns}{\b\cf1 .}{\cf5 is_empty}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_selected_item}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has selected items?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_implies_selected_items_not_empty}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\b\cf6 not} {\cf5 selected_items}{\b\cf1 .}{\cf5 is_empty}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_selected_row}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has selected row?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_implies_selected_rows_not_empty}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\b\cf6 not} {\cf5 selected_rows}{\b\cf1 .}{\cf5 is_empty}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 id_freed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has }{\cf5 Current}{\cf3  been removed from the table?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_displayed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 Current}{\cf3  visible on the screen?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 True}{\cf3  when show requested and parent displayed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 is_displayed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_dockable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 Current}{\cf3  dockable?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3 , then }{\cf5 Current}{\cf3  may be dragged}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  from its current parent.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 is_dockable}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_is_empty}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is there no element?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 EV_CELL}{\cf3  as synonym of }{\cf5 extendible}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_external_docking_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 Current}{\cf3  able to be docked into an EV_DOCKABLE_DIALOG}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  When there is no valid EV_DRAGABLE_TARGET upon completion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of transport?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 is_external_docking_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_external_docking_relative}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will dockable dialog displayed when }{\cf5 Current}{\cf3  is docked externally}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  be displayed relative to parent window of }{\cf5 Current}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Otherwise displayed as a standard window.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 is_external_docking_relative}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_is_inserted} {\cf1 (}{\cf5 v}{\cf1 :} {\cf4 EV_WIDGET}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has }{\cf5 v}{\cf3  been inserted by the most recent insertion?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (By default, the value returned is equivalent to calling }{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 has (v)}{\cf3 . However, descendants might be able to provide more}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  efficient implementations.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 COLLECTION}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_item_tab_navigation_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the tabbing mode for }{\cf5 Current}{\cf3  set so that keyboard tabbing moves to/from 'has_default_activation' grid items?}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_multiple_item_selection_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does clicking or keyboard navigating via arrow keys select an item, with multiple}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  item selection permitted via the use of Ctrl and Shift keys?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_multiple_row_selection_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does clicking or keyboard navigating via arrow keys select the whole row, with multiple}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  row selection permitted via the use of Ctrl and Shift keys?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_selection_keyboard_handling_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May items be selected via the keyboard?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_selection_on_click_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will an item be selected if clicked upon?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_selection_on_single_button_click_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will an item be selected if clicked upon via mouse button }{\cf5 1}{\cf3  only?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_sensitive}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is object sensitive to user input.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_SENSITIVE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_SENSITIVE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_SENSITIVE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 user_is_sensitive}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_show_requested}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will }{\cf5 Current}{\cf3  be displayed when its parent is?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  See also }{\cf5 is_displayed}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 is_show_requested}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_single_item_selection_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does clicking or keyboard navigating via arrow keys select an item, unselecting}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  any previously selected items?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_single_row_selection_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does clicking or keyboard navigating via arrow keys select the whole row, unselecting}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  any previously rows?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_tree_enabled}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is tree functionality enabled?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Must be }{\cf5 True}{\cf3  to perform any tree structure functions on }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Use }{\cf5 enable_tree}{\cf3  and }{\cf5 disable_tree}{\cf3  to set this state.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 last_visible_column}{\cf1 :} {\cf4 EV_GRID_COLUMN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Index of last column visible in }{\cf5 Current}{\cf3  or 0 if }{\cf5 column_count}{\cf3  = 0.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The last visible column may be only partially visible.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_displayed}{\cf1 :} {\cf5 is_displayed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 has_columns_implies_result_not_void}{\cf1 :} {\cf5 column_count} {\cf1 >} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 no_columns_implies_result_void}{\cf1 :} {\cf5 column_count} {\cf1 =} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 last_visible_row}{\cf1 :} {\cf4 EV_GRID_ROW}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Last row visible in }{\cf5 Current}{\cf3  or Void if }{\cf5 visible_row_count}{\cf3  = 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The last visible row may be only partially visible.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_displayed}{\cf1 :} {\cf5 is_displayed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 has_rows_implies_result_not_void}{\cf1 :} {\cf5 visible_row_count} {\cf1 >} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 no_rows_implies_result_void}{\cf1 :} {\cf5 visible_row_count} {\cf1 =} 0 {\b\cf6 implies} {\b\cf6 Result} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_merged_radio_button_groups}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_CONTAINER}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  is all other radio button groups}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  merged with }{\cf5 Current}{\cf3 . Void if no other containers}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  are merged.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_empty}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void} {\b\cf6 implies} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
}{\line}
{\tab}{\cf5 {\cf5 mode_is_configurable_target_menu}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the user interface mode a configurable pop-up menu of targets?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 mode_is_configurable_target_menu}{\line}
}{\line}
{\tab}{\cf5 {\cf5 mode_is_drag_and_drop}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the user interface mode drag and drop?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 mode_is_drag_and_drop}{\line}
}{\line}
{\tab}{\cf5 {\cf5 mode_is_pick_and_drop}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the user interface mode pick and drop?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 mode_is_pick_and_drop}{\line}
}{\line}
{\tab}{\cf5 {\cf5 mode_is_target_menu}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the user interface mode a pop-up menu of targets?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 mode_is_target_menu}{\line}
}{\line}
{\tab}{\cf5 {\cf5 Prunable}{\cf1 :} {\cf4 BOOLEAN} {\cf1 =} {\b\cf6 False}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May items be removed?}{\line}
{\line}
{\tab}{\cf5 {\cf5 Readable}{\cf1 :} {\cf4 BOOLEAN} {\cf1 =} {\b\cf6 False}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is there a current item that may be accessed?}{\line}
{\line}
{\tab}{\cf5 {\cf5 real_source}{\cf1 :} {\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  is source to be dragged}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3   when a docking drag occurs on }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 Void}{\cf3 , }{\cf5 Current}{\cf3  is dragged.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 real_source}{\line}
}{\line}
{\tab}{\cf5 {\cf5 same_type} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is type of current object identical to type of }{\cf5 other}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 and} {\cf5 other}{\b\cf1 .}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 tree_node_connector_color}{\cf1 :} {\cf4 EV_COLOR}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Color of connectors drawn between tree nodes within }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 viewable_row_indexes}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Indexes of all rows that are currently viewable in the grid in its present state.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  For example, if the first node is a non expanded tree that has 10 subrows, the contents}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  would be 1, 11, 12, 13, 14, ...}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  This list only returns valid values if variable row heights, tree functionality or}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  hidden nodes are enabled in the grid, otherwise the returned list is empty.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 visible_column_indexes}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All columns that are currently visible in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  may not be contiguous if one or more columns are hidden.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_displayed}{\cf1 :} {\cf5 is_displayed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 visible_row_indexes}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Indexes of all rows that are currently visible in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  may not be contiguous if }{\cf5 is_tree_enabled}{\cf3  and one or more of the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  visible rows have subrows and are not expanded.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_displayed}{\cf1 :} {\cf5 is_displayed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 Writable}{\cf1 :} {\cf4 BOOLEAN} {\cf1 =} {\b\cf6 False}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is there a current item that may be modified?}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status setting}{\line}
{\line}
{\tab}{\cf5 {\cf5 center_pointer}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Position screen pointer over center of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_always_selected}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Allow the user to completely remove the selection from }{\cf5 Current}{\cf3  via clicking on an item,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  clicking on a Void area or by Ctrl clicking the selected item itself.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_item_always_selected_enabled}{\cf1 :} {\b\cf6 not} {\cf5 is_always_selected}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_capture}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Disable grab of all user input events.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_has_capture}{\cf1 :} {\b\cf6 not} {\cf5 has_capture}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_column_resize_immediate}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_column_resize_immediate}{\cf3  is }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_column_resize_immediate}{\cf1 :} {\b\cf6 not} {\cf5 is_column_resize_immediate}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_column_separators}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 are_column_separators_enabled}{\cf3  is }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_separators_disabled}{\cf1 :} {\b\cf6 not} {\cf5 are_column_separators_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_columns_drawn_above_rows}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 are_columns_drawn_above_rows}{\cf3  is }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 columns_drawn_below_rows}{\cf1 :} {\b\cf6 not} {\cf5 are_columns_drawn_above_rows}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_dockable}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 Current}{\cf3  is not dockable.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_dockable}{\cf1 :} {\b\cf6 not} {\cf5 is_dockable}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_docking}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_docking_enabled}{\cf3  is False.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Current}{\cf3  will not accept docking.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_TARGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_dockable}{\cf1 :} {\b\cf6 not} {\cf5 is_docking_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_dynamic_content}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure contents of }{\cf5 Current}{\cf3  are not dynamic and are no longer retrieved as such.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 content_not_dynamic}{\cf1 :} {\b\cf6 not} {\cf5 is_content_partially_dynamic}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_external_docking}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 False}{\cf3  to }{\cf5 is_external_docking_enabled}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Forbid }{\cf5 Current}{\cf3  to be docked into an EV_DOCKABLE_DIALOG}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  When there is no valid EV_DRAGABLE_TARGET upon completion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of transport.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_dockable}{\cf1 :} {\cf5 is_dockable}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_externally_dockable}{\cf1 :} {\b\cf6 not} {\cf5 is_external_docking_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_external_docking_relative}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 False}{\cf3  to }{\cf5 is_external_docking_relative}{\cf3 , ensuring that}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a dockable dialog displayed when }{\cf5 Current}{\cf3  is docked externally}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is displayed as a standard window.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 external_docking_enabled}{\cf1 :} {\cf5 is_external_docking_enabled}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 external_docking_not_relative}{\cf1 :} {\b\cf6 not} {\cf5 is_external_docking_relative}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_focus_on_press}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Disable focus handling when mouse button is pressed on grid excluding header and scrollbars.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_full_redraw_on_virtual_position_change}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_full_redraw_on_virtual_position_change_enabled}{\cf3  is }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_full_redraw_on_virtual_position_change_enabled}{\cf1 :} {\b\cf6 not} {\cf5 is_full_redraw_on_virtual_position_change_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_horizontal_overscroll}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_horizontal_overscroll_enabled}{\cf3  is }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_horizontal_overscroll_enabled}{\cf1 :} {\b\cf6 not} {\cf5 is_horizontal_overscroll_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_horizontal_scrolling_per_item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure horizontal scrolling is performed on a per-pixel basis.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 horizontal_scrolling_performed_per_pixel}{\cf1 :} {\b\cf6 not} {\cf5 is_horizontal_scrolling_per_item}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_item_tab_navigation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Disable tabbed item navigation so that tabbing loses focus from the grid by default.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 tabbed_item_navigation_disabled}{\cf1 :} {\b\cf6 not} {\cf5 is_item_tab_navigation_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_pebble_positioning}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 False}{\cf3  to }{\cf5 pebble_positioning_enabled}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The pick and drop will start at the pointer position.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pebble_positioning_updated}{\cf1 :} {\b\cf6 not} {\cf5 pebble_positioning_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_resizing_divider}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure no vertical divider is displayed during column resizing.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 resizing_divider_disabled}{\cf1 :} {\b\cf6 not} {\cf5 is_resizing_divider_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_row_height_fixed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Permit rows to have varying heights.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 not_dynamic_content_enabled_with_height_not_bounded}{\cf1 :} {\b\cf6 not} {\cf1 (}{\cf5 is_content_partially_dynamic} {\b\cf6 and} {\cf5 is_vertical_overscroll_enabled} {\cf1 =} {\b\cf6 False}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_height_variable}{\cf1 :} {\b\cf6 not} {\cf5 is_row_height_fixed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_row_separators}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 are_row_separators_enabled}{\cf3  is }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_separators_disabled}{\cf1 :} {\b\cf6 not} {\cf5 are_row_separators_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_selection_key_handling}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Disable selection handling of items via the keyboard.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 selection_key_handling_disabled}{\cf1 :} {\b\cf6 not} {\cf5 is_selection_keyboard_handling_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_selection_on_click}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Disable selection handling when items are clicked upon.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 selection_on_click_disabled}{\cf1 :} {\b\cf6 not} {\cf5 is_selection_on_click_enabled} {\b\cf6 and then} {\b\cf6 not} {\cf5 is_selection_on_single_button_click_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_sensitive}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make object non-sensitive to user input.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_SENSITIVE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_SENSITIVE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_SENSITIVE}{\line}
{\tab}{\tab}{\tab}{\cf1 is_unsensitive}{\cf1 :} {\b\cf6 not} {\cf5 is_sensitive}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_solid_resizing_divider}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure resizing divider displayed during column resizing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is displayed as a dashed line.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 dashed_resizing_divider}{\cf1 :} {\b\cf6 not} {\cf5 is_resizing_divider_solid}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_tree}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Disable tree functionality for }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All subrows of rows contained are unparented,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  which flattens the tree structure.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_disabled}{\cf1 :} {\b\cf6 not} {\cf5 is_tree_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_vertical_overscroll}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_vertical_overscroll_enabled}{\cf3  is }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 dynamic_content_not_enabled_with_variable_row_heights}{\cf1 :} {\b\cf6 not} {\cf1 (}{\cf5 is_content_partially_dynamic} {\b\cf6 and} {\b\cf6 not} {\cf5 is_row_height_fixed}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_vertical_overscroll_enabled}{\cf1 :} {\b\cf6 not} {\cf5 is_vertical_overscroll_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 disable_vertical_scrolling_per_item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure vertical scrolling is performed on a per-pixel basis.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 not_dynamic_content_enabled_with_row_height_variable}{\cf1 :} {\b\cf6 not} {\cf1 (}{\cf5 is_content_partially_dynamic} {\b\cf6 and} {\cf5 is_row_height_fixed} {\cf1 =} {\b\cf6 False}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 vertical_scrolling_performed_per_pixel}{\cf1 :} {\b\cf6 not} {\cf5 is_vertical_scrolling_per_item}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_always_selected}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure that the user may not completely remove the selection from }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 item_is_always_selected_enabled}{\cf1 :} {\cf5 is_always_selected}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_capture}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Grab all user input events (mouse and keyboard).}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 disable_capture}{\cf3  must be called to resume normal input handling.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_displayed}{\cf1 :} {\cf5 is_displayed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 has_capture}{\cf1 :} {\cf5 has_capture}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_column_resize_immediate}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_column_resize_immediate}{\cf3  is }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 is_column_resize_immediate}{\cf1 :} {\cf5 is_column_resize_immediate}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_column_separators}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 are_column_separators_enabled}{\cf3  is }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_separators_enabled}{\cf1 :} {\cf5 are_column_separators_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_columns_drawn_above_rows}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 are_columns_drawn_above_rows}{\cf3  is }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 columns_drawn_above_rows}{\cf1 :} {\cf5 are_columns_drawn_above_rows}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_dockable}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 Current}{\cf3  is dockable.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 is_dockable}{\cf1 :} {\cf5 is_dockable}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_docking}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_docking_enabled}{\cf3  is True.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_TARGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 is_dockable}{\cf1 :} {\cf5 is_docking_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_external_docking}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 True}{\cf3  to }{\cf5 is_external_docking_enabled}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Allows }{\cf5 Current}{\cf3  to be docked into an EV_DOCKABLE_DIALOG}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  When there is no valid EV_DRAGABLE_TARGET upon completion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of transport.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_dockable}{\cf1 :} {\cf5 is_dockable}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 is_externally_dockable}{\cf1 :} {\cf5 is_external_docking_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_external_docking_relative}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 True}{\cf3  to }{\cf5 is_external_docking_relative}{\cf3 , ensuring that}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a dockable dialog displayed when }{\cf5 Current}{\cf3  is docked externally}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is displayed relative to the top level window.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 external_docking_enabled}{\cf1 :} {\cf5 is_external_docking_enabled}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 external_docking_not_relative}{\cf1 :} {\cf5 is_external_docking_relative}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_focus_on_press}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Enable focus handling when mouse button is pressed on grid excluding header and scrollbars.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_full_redraw_on_virtual_position_change}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_full_redraw_on_virtual_position_change_enabled}{\cf3  is }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 is_full_redraw_on_virtual_position_change_enabled}{\cf1 :} {\cf5 is_full_redraw_on_virtual_position_change_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_horizontal_overscroll}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_horizontal_overscroll_enabled}{\cf3  is }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 is_horizontal_overscroll_enabled}{\cf1 :} {\cf5 is_horizontal_overscroll_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_horizontal_scrolling_per_item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure horizontal scrolling is performed on a per-item basis.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 horizontal_scrolling_performed_per_item}{\cf1 :} {\cf5 is_horizontal_scrolling_per_item}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_item_tab_navigation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Allow keyboard tab navigation to occur within current for items that return True for 'has_default_activation'.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Tabbing in to the grid from a previous widget will select the first item.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Shift/Tabbing in to the grid will select the most bottom/right default activable grid item.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 tabbed_item_navigation_enabled}{\cf1 :} {\cf5 is_item_tab_navigation_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_multiple_item_selection}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Allow the user to select more than one item via clicking or navigating using the keyboard arrow keys.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Multiple items may be selected via Ctrl and Shift keys.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 multiple_item_selection_enabled}{\cf1 :} {\cf5 is_multiple_item_selection_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_multiple_row_selection}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Allow the user to select more than one row via clicking or navigating using the keyboard arrow keys.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Multiple rows may be selected via Ctrl and Shift keys.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 multiple_row_selection_enabled}{\cf1 :} {\cf5 is_multiple_row_selection_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_partial_dynamic_content}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure contents of }{\cf5 Current}{\cf3  must be retrieved when required via execution of}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 dynamic_content_function}{\cf3  only if the item is not already set}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 not_row_height_variable_and_vertical_overscroll_enabled}{\cf1 :} {\b\cf6 not} {\cf1 (}{\b\cf6 not} {\cf5 is_row_height_fixed} {\b\cf6 and} {\cf5 is_vertical_overscroll_enabled}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 not_row_height_variable_and_vertical_scrolling_per_pixel}{\cf1 :} {\b\cf6 not} {\cf1 (}{\b\cf6 not} {\cf5 is_row_height_fixed} {\b\cf6 and} {\b\cf6 not} {\cf5 is_vertical_scrolling_per_item}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 content_partially_dynamic}{\cf1 :} {\cf5 is_content_partially_dynamic}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_pebble_positioning}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 True}{\cf3  to }{\cf5 pebble_positioning_enabled}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Use }{\cf5 pebble_x_position}{\cf3  and }{\cf5 pebble_y_position}{\cf3  as the initial coordinates}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  for the pick and drop in pixels relative to }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pebble_positioning_updated}{\cf1 :} {\cf5 pebble_positioning_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_resizing_divider}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure a vertical divider is displayed during column resizing.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 resizing_divider_enabled}{\cf1 :} {\cf5 is_resizing_divider_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_row_height_fixed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure all rows have the same height.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_height_fixed}{\cf1 :} {\cf5 is_row_height_fixed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_row_separators}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 are_row_separators_enabled}{\cf3  is }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_separators_enabled}{\cf1 :} {\cf5 are_row_separators_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_selection_key_handling}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Enable selection handling of items via the keyboard.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 selection_key_handling_enabled}{\cf1 :} {\cf5 is_selection_keyboard_handling_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_selection_on_click}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Enable selection handling of items when clicked upon via mouse button.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 selection_on_click_enabled}{\cf1 :} {\cf5 is_selection_on_click_enabled}{\line}
{\tab}{\tab}{\tab}{\cf1 selection_on_single_click_disabled}{\cf1 :} {\b\cf6 not} {\cf5 is_selection_on_single_button_click_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_selection_on_single_button_click}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Enable selection handling of items when clicked upon via mouse button }{\cf5 1}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  This is useful when implementing Contextual Menus where the selection may need}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to remain unchanged when using mouse button }{\cf5 3}{\cf3  to handle the menu.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 selection_on_single_click_enabled}{\cf1 :} {\cf5 is_selection_on_single_button_click_enabled} {\b\cf6 and then} {\cf5 is_selection_on_click_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_sensitive}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make object sensitive to user input.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_SENSITIVE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_SENSITIVE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_SENSITIVE}{\line}
{\tab}{\tab}{\tab}{\cf1 is_sensitive}{\cf1 :} {\cf1 (}{\cf5 parent} {\cf1 =} {\b\cf6 Void} {\b\cf6 or} {\cf5 parent_is_sensitive}{\cf1 )} {\b\cf6 implies} {\cf5 is_sensitive}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_single_item_selection}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Allow the user to select a single item via clicking or navigating using the keyboard arrow keys.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 single_item_selection_enabled}{\cf1 :} {\cf5 is_single_item_selection_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_single_row_selection}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Allow the user to select a single row via clicking or navigating using the keyboard arrow keys.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 single_row_selection_enabled}{\cf1 :} {\cf5 is_single_row_selection_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_solid_resizing_divider}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure resizing divider displayed during column resizing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is displayed as a solid line.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 solid_resizing_divider}{\cf1 :} {\cf5 is_resizing_divider_solid}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_tree}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Enable tree functionality for }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_enabled}{\cf1 :} {\cf5 is_tree_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_vertical_overscroll}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_vertical_overscroll_enabled}{\cf3  is }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 is_vertical_overscroll_enabled}{\cf1 :} {\cf5 is_vertical_overscroll_enabled}{\line}
}{\line}
{\tab}{\cf5 {\cf5 enable_vertical_scrolling_per_item}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure vertical scrolling is performed on a per-item basis.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 vertical_scrolling_performed_per_item}{\cf1 :} {\cf5 is_vertical_scrolling_per_item}{\line}
}{\line}
{\tab}{\cf5 {\cf5 hide}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Request that }{\cf5 Current}{\cf3  not be displayed even when its parent is.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If successful, make }{\cf5 is_show_requested}{\cf3  }{\cf5 False}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 hide_column} {\cf1 (}{\cf5 a_column}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure column }{\cf5 a_column}{\cf3  is not visible in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_within_bounds}{\cf1 :} {\cf5 a_column} {\cf1 >} 0 {\b\cf6 and} {\cf5 a_column} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_not_displayed}{\cf1 :} {\b\cf6 not} {\cf5 column_displayed}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 hide_header}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure header is hidden.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 header_not_displayed}{\cf1 :} {\b\cf6 not} {\cf5 is_header_displayed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 hide_horizontal_scroll_bar}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure no horizontal scroll bar is displayed in }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  at any time.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_horizontal_scroll_bar_show_requested}{\cf1 :} {\b\cf6 not} {\cf5 is_horizontal_scroll_bar_show_requested}{\line}
}{\line}
{\tab}{\cf5 {\cf5 hide_tree_node_connectors}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure no connectors are displayed between nodes of tree structure in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_node_connectors_hidden}{\cf1 :} {\b\cf6 not} {\cf5 are_tree_node_connectors_shown}{\line}
}{\line}
{\tab}{\cf5 {\cf5 hide_vertical_scroll_bar}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure no vertical scroll bar is displayed in }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  at any time.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_vertical_scroll_bar_show_requested}{\cf1 :} {\b\cf6 not} {\cf5 is_vertical_scroll_bar_show_requested}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_always_selected}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May the user completely remove the selection from the grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 True}{\cf3  then the user of the grid may only deselect items by selecting other items.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_horizontal_scroll_bar_show_requested}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will a horizontal scroll bar be displayed in }{\cf5 Current}{\cf3  when}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 virtual_width}{\cf3  exceeds }{\cf5 viewable_width}{\cf3 ?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_vertical_scroll_bar_show_requested}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will a vertical scroll bar be displayed in }{\cf5 Current}{\cf3  when}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 virtual_height}{\cf3  exceeds }{\cf5 viewable_height}{\cf3 ?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 lock_update}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_locked}{\cf3  is }{\cf5 True}{\cf3 , thereby preventing graphical}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  updates until }{\cf5 unlock_update}{\cf3  is called.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 is_locked}{\cf1 :} {\cf5 is_locked}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_merge_radio_button_groups} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_CONTAINER}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Merge }{\cf5 Current}{\cf3  radio button group with that of }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 redraw}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Force }{\cf5 Current}{\cf3  to be re-drawn when next idle.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_default_key_processing_handler}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 default_key_processing_handler}{\cf3  is Void.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_pebble}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make }{\cf5 pebble}{\cf3  }{\cf5 Void}{\cf3  and }{\cf5 pebble_function}{\cf3  `Void,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Removing transport.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pebble_removed}{\cf1 :} {\cf5 pebble} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 pebble_function} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_real_source}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 real_source}{\cf3  is }{\cf5 Void}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 real_source_void}{\cf1 :} {\cf5 real_source} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_real_target}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 real_target}{\cf3  is }{\cf5 Void}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 real_target_void}{\cf1 :} {\cf5 real_target} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 select_column} {\cf1 (}{\cf5 a_column}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure all items in }{\cf5 a_column}{\cf3  are selected.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_within_bounds}{\cf1 :} {\cf5 a_column} {\cf1 >} 0 {\b\cf6 and} {\cf5 a_column} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\tab}{\cf1 column_displayed}{\cf1 :} {\cf5 column_displayed}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_selected}{\cf1 :} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\b\cf1 .}{\cf5 is_selected}{\line}
}{\line}
{\tab}{\cf5 {\cf5 select_row} {\cf1 (}{\cf5 a_row}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure all items in }{\cf5 a_row}{\cf3  are selected.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_within_bounds}{\cf1 :} {\cf5 a_row} {\cf1 >} 0 {\b\cf6 and} {\cf5 a_row} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_selected}{\cf1 :} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 is_selected}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_accept_cursor} {\cf1 (}{\cf5 a_cursor}{\cf1 :} {\b\cf6 like} {\cf5 accept_cursor}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_cursor}{\cf3  to be displayed when the screen pointer is over a}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  target that accepts }{\cf5 pebble}{\cf3  during pick and drop.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 accept_cursor_assigned}{\cf1 :} {\b\cf6 attached} {\cf5 a_cursor} {\b\cf6 as} l_accept_cursor {\b\cf6 implies} {\cf5 l_accept_cursor} {\cf1 ~} {\cf5 accept_cursor}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_actual_drop_target_agent} {\cf1 (}{\cf5 an_agent}{\cf1 :} {\b\cf6 like} {\cf5 actual_drop_target_agent}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 an_agent}{\cf3  to }{\cf5 actual_drop_target_agent}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 an_agent_not_void}{\cf1 :} {\cf5 an_agent} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 assigned}{\cf1 :} {\cf5 actual_drop_target_agent} {\cf1 =} {\cf5 an_agent}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_column_count_to} {\cf1 (}{\cf5 a_column_count}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Resize }{\cf5 Current}{\cf3  to have }{\cf5 a_column_count}{\cf3  columns.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_count_positive}{\cf1 :} {\cf5 a_column_count} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_count_set}{\cf1 :} {\cf5 column_count} {\cf1 =} {\cf5 a_column_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_configurable_target_menu_handler} {\cf1 (}{\cf5 a_handler}{\cf1 :} {\cf4 PROCEDURE} {\cf1 [}{\cf4 EV_MENU}{\cf1 ,} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 EV_PND_TARGET_DATA}{\cf1 ]}{\cf1 ,} {\cf4 EV_PICK_AND_DROPABLE}{\cf1 ,} {\cf4 ANY}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set Configurable Target Menu Handler to }{\cf5 a_handler}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 configurable_target_menu_hander_assigned}{\cf1 :} {\cf5 configurable_target_menu_handler} {\cf1 =} {\cf5 a_handler}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_configurable_target_menu_mode}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set user interface mode to pop-up menu of targets.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Target menu is configurable as the first option can be used to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  initiate a regular 'pick and drop' of the source pebble.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 target_menu_mode_set}{\cf1 :} {\cf5 mode_is_configurable_target_menu}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_default_colors}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set foreground and background color to their default values.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_COLORIZABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_default_key_processing_handler} {\cf1 (}{\cf5 a_handler}{\cf1 :} {\b\cf6 like} {\cf5 default_key_processing_handler}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 default_key_processing_handler}{\cf3  to }{\cf5 a_handler}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_deny_cursor} {\cf1 (}{\cf5 a_cursor}{\cf1 :} {\b\cf6 like} {\cf5 deny_cursor}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_cursor}{\cf3  to be displayed when the screen pointer is not}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  over a valid target.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 deny_cursor_assigned}{\cf1 :} {\b\cf6 attached} {\cf5 a_cursor} {\b\cf6 as} l_deny_cursor {\b\cf6 implies} {\cf5 l_deny_cursor} {\cf1 ~} {\cf5 deny_cursor}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_drag_and_drop_mode}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set user interface mode to drag and drop.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 drag_and_drop_set}{\cf1 :} {\cf5 mode_is_drag_and_drop}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_dynamic_content_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\cf4 EV_GRID_ITEM}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Function which computes the item that resides in a particular position of the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  grid while }{\cf5 is_content_partially_dynamic}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_function_not_void}{\cf1 :} {\cf5 a_function} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 dynamic_content_function_set}{\cf1 :} {\cf5 dynamic_content_function} {\cf1 =} {\cf5 a_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_first_visible_row} {\cf1 (}{\cf5 a_row}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_row}{\cf3  as the first row visible in }{\cf5 Current}{\cf3  as long}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as there are enough rows after }{\cf5 a_row}{\cf3  to fill the remainder of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_row_index}{\cf1 :} {\cf5 a_row} {\cf1 >=} 1 {\b\cf6 and} {\cf5 a_row} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 to_implement_assertion}{\cf1  }{\cf1 (}"EV_GRID.set_first_visible_row - Enough following rows implies `first_visible_row' = a_row, Can be calculated from `height' of `Current' and row heights."{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_focus}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Grab keyboard focus if }{\cf5 is_displayed}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_sensitive}{\cf1 :} {\cf5 is_sensitive}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_focused_selection_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\cf4 EV_COLOR}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_color}{\cf3  to }{\cf5 focused_selection_color}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 focused_selection_color_set}{\cf1 :} {\cf5 focused_selection_color} {\cf1 =} {\cf5 a_color}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_focused_selection_text_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\cf4 EV_COLOR}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_color}{\cf3  to }{\cf5 focused_selection_text_color}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 focused_selection_text_color_set}{\cf1 :} {\cf5 focused_selection_text_color} {\cf1 =} {\cf5 a_color}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_item_accept_cursor_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 EV_POINTER_STYLE}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_function}{\cf3  to }{\cf5 item_accept_cursor_function}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 item_accept_cursor_function_set}{\cf1 :} {\cf5 item_accept_cursor_function} {\cf1 =} {\cf5 a_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_item_deny_cursor_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 EV_POINTER_STYLE}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_function}{\cf3  to }{\cf5 item_deny_cursor_function}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 item_deny_cursor_function_set}{\cf1 :} {\cf5 item_deny_cursor_function} {\cf1 =} {\cf5 a_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_item_pebble_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 ANY}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_function}{\cf3  to }{\cf5 item_pebble_function}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 item_pebble_function_set}{\cf1 :} {\cf5 item_pebble_function} {\cf1 =} {\cf5 a_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_item_veto_pebble_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_GRID_ITEM}{\cf1 ,} {\cf4 ANY}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_function}{\cf3  to }{\cf5 item_veto_pebble_function}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 item_veto_pebble_function_set}{\cf1 :} {\cf5 item_veto_pebble_function} {\cf1 =} {\cf5 a_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_node_pixmaps} {\cf1 (}{\cf5 an_expand_node_pixmap}{\cf1 ,} {\cf5 a_collapse_node_pixmap}{\cf1 :} {\cf4 EV_PIXMAP}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 an_expand_node_pixmap}{\cf3  to }{\cf5 expand_node_pixmap}{\cf3  and }{\cf5 a_collapse_node_pixmap}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 collapse_node_pixmap}{\cf3 . These pixmaps are used in rows containing subrows for}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  expanding/collapsing the row.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 pixmaps_not_void}{\cf1 :} {\cf5 an_expand_node_pixmap} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 a_collapse_node_pixmap} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 pixmaps_dimensions_identical}{\cf1 :} {\cf5 an_expand_node_pixmap}{\b\cf1 .}{\cf5 width} {\cf1 =} {\cf5 a_collapse_node_pixmap}{\b\cf1 .}{\cf5 width} {\b\cf6 and} {\cf5 an_expand_node_pixmap}{\b\cf1 .}{\cf5 height} {\cf1 =} {\cf5 a_collapse_node_pixmap}{\b\cf1 .}{\cf5 height}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 pixmaps_set}{\cf1 :} {\cf5 expand_node_pixmap} {\cf1 =} {\cf5 an_expand_node_pixmap} {\b\cf6 and} {\cf5 collapse_node_pixmap} {\cf1 =} {\cf5 a_collapse_node_pixmap}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_non_focused_selection_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\cf4 EV_COLOR}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_color}{\cf3  to }{\cf5 non_focused_selection_color}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 non_focused_selection_color_set}{\cf1 :} {\cf5 non_focused_selection_color} {\cf1 =} {\cf5 a_color}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_non_focused_selection_text_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\cf4 EV_COLOR}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_color}{\cf3  to }{\cf5 non_focused_selection_text_color}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 non_focused_selection_text_color_set}{\cf1 :} {\cf5 non_focused_selection_text_color} {\cf1 =} {\cf5 a_color}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_pebble} {\cf1 (}{\cf5 a_pebble}{\cf1 :} {\cf4 ANY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_pebble}{\cf3  to }{\cf5 pebble}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Overrides }{\cf5 set_pebble_function}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 a_pebble_not_void}{\cf1 :} {\cf5 a_pebble} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pebble_assigned}{\cf1 :} {\cf5 pebble} {\cf1 =} {\cf5 a_pebble}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_pebble_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 ANY}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_function}{\cf3  to compute }{\cf5 pebble}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  It will be called once each time a pick occurs, the result}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  will be assigned to }{\cf5 pebble}{\cf3  for the duration of transport.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  When a pick occurs, the pick position in widget coordinates,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  <<x, y>> in pixels, is passed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  To handle this data use }{\cf5 a_function}{\cf3  of type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  FUNCTION [ANY, TUPLE [INTEGER, INTEGER], ANY] and return the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  pebble as a function of x and y.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Overrides }{\cf5 set_pebble}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 a_function_not_void}{\cf1 :} {\cf5 a_function} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 a_function_takes_two_integer_open_operands}{\cf1 :} {\cf5 a_function}{\b\cf1 .}{\cf5 valid_operands}{\cf1  }{\cf1 (}{\cf1 [}1{\cf1 ,} 1{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pebble_function_assigned}{\cf1 :} {\cf5 pebble_function} {\cf1 =} {\cf5 a_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_pebble_position} {\cf1 (}{\cf5 a_x}{\cf1 ,} {\cf5 a_y}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the initial position for pick and drop}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Coordinates are in pixels and are relative to position of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pebble_positioning_enabled must be }{\cf5 True}{\cf3  for the position to be used,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use enable_pebble_positioning.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pebble_position_assigned}{\cf1 :} {\cf5 pebble_x_position} {\cf1 =} {\cf5 a_x} {\b\cf6 and} {\cf5 pebble_y_position} {\cf1 =} {\cf5 a_y}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_pick_and_drop_mode}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set user interface mode to pick and drop.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pick_and_drop_set}{\cf1 :} {\cf5 mode_is_pick_and_drop}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_real_source} {\cf1 (}{\cf5 dockable_source}{\cf1 :} {\cf4 EV_DOCKABLE_SOURCE}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 dockable_source}{\cf3  to }{\cf5 real_source}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 is_dockable}{\cf1 :} {\cf5 is_dockable}{\line}
{\tab}{\tab}{\tab}{\cf1 dockable_source_not_void}{\cf1 :} {\cf5 dockable_source} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 dockable_source_is_parent_recursive}{\cf1 :} {\cf5 source_has_current_recursive}{\cf1  }{\cf1 (}{\cf5 dockable_source}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 real_source_assigned}{\cf1 :} {\cf5 real_source} {\cf1 =} {\cf5 dockable_source}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_real_target} {\cf1 (}{\cf5 a_target}{\cf1 :} {\cf4 EV_DOCKABLE_TARGET}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_target}{\cf3  to }{\cf5 real_target}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 target_not_void}{\cf1 :} {\cf5 a_target} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 assigned}{\cf1 :} {\cf5 real_target} {\cf1 =} {\cf5 a_target}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_row_count_to} {\cf1 (}{\cf5 a_row_count}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Resize }{\cf5 Current}{\cf3  to have }{\cf5 a_row_count}{\cf3  rows.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_count_non_negative}{\cf1 :} {\cf5 a_row_count} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_set}{\cf1 :} {\cf5 row_count} {\cf1 =} {\cf5 a_row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_row_height} {\cf1 (}{\cf5 a_row_height}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set height of all rows within }{\cf5 Current}{\cf3  to `a_row_height}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If not }{\cf5 is_row_height_fixed}{\cf3  then use the height individually per row instead.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_height_positive}{\cf1 :} {\cf5 a_row_height} {\cf1 >=} 1{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_height_set}{\cf1 :} {\cf5 row_height} {\cf1 =} {\cf5 a_row_height}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_separator_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\cf4 EV_COLOR}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_color}{\cf3  as }{\cf5 separator_color}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 separator_color_set}{\cf1 :} {\cf5 separator_color} {\cf1 =} {\cf5 a_color}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_subrow_indent} {\cf1 (}{\cf5 a_subrow_indent}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 subrow_indent}{\cf3  to }{\cf5 a_subrow_indent}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_subrow_indent_non_negtive}{\cf1 :} {\cf5 a_subrow_indent} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 subrow_indent_set}{\cf1 :} {\cf5 subrow_indent} {\cf1 =} {\cf5 a_subrow_indent}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_target_data_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\b\cf6 like} {\cf5 pebble}{\cf1 ,} {\cf4 EV_PND_TARGET_DATA}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_function}{\cf3  to compute target meta data based on transport source.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Overrides any }{\cf5 target_name}{\cf3  set with }{\cf5 set_target_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 a_function_not_void}{\cf1 :} {\cf5 a_function} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 target_data_function_assigned}{\cf1 :} {\cf5 target_data_function} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 target_data_function}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 a_function}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_target_menu_mode}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set user interface mode to pop-up menu of targets.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 target_menu_mode_set}{\cf1 :} {\cf5 mode_is_target_menu}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_target_name} {\cf1 (}{\cf5 a_name}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_name}{\cf3  to }{\cf5 target_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 a_name_not_void}{\cf1 :} {\cf5 a_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 target_name_assigned}{\cf1 :} {\b\cf6 attached} {\cf5 target_name} {\b\cf6 as} l_target_name {\b\cf6 and then} {\cf5 a_name} {\cf1 /=} {\cf5 l_target_name} {\b\cf6 and then} {\cf5 a_name}{\b\cf1 .}{\cf5 same_string}{\cf1  }{\cf1 (}{\cf5 l_target_name}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_tree_node_connector_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\cf4 EV_COLOR}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_color}{\cf3  as }{\cf5 tree_node_connector_color}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_node_connector_color_set}{\cf1 :} {\cf5 tree_node_connector_color} {\cf1 =} {\cf5 a_color}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_veto_dock_function} {\cf1 (}{\cf5 a_function}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_DOCKABLE_SOURCE}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_function}{\cf3  to }{\cf5 veto_dock_function}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_TARGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_function_not_void}{\cf1 :} {\cf5 a_function} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf1 veto_function_set}{\cf1 :} {\cf5 veto_dock_function} {\cf1 =} {\cf5 a_function}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_virtual_position} {\cf1 (}{\cf5 virtual_x}{\cf1 ,} {\cf5 virtual_y}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move viewable area of }{\cf5 Current}{\cf3  to virtual position }{\cf5 virtual_x}{\cf3 , }{\cf5 virtual_y}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 virtual_x_valid}{\cf1 :} {\cf5 virtual_x} {\cf1 >=} 0 {\b\cf6 and} {\cf5 virtual_x} {\cf1 <=} {\cf5 maximum_virtual_x_position}{\line}
{\tab}{\tab}{\tab}{\cf1 virtual_y_valid}{\cf1 :} {\cf5 virtual_y} {\cf1 >=} 0 {\b\cf6 and} {\cf5 virtual_y} {\cf1 <=} {\cf5 maximum_virtual_y_position}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 virtual_position_set}{\cf1 :} {\cf5 virtual_x_position} {\cf1 =} {\cf5 virtual_x} {\b\cf6 and} {\cf5 virtual_y_position} {\cf1 =} {\cf5 virtual_y}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Request that }{\cf5 Current}{\cf3  be displayed when its parent is.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 True}{\cf3  by default.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If successful, make }{\cf5 is_show_requested}{\cf3  }{\cf5 True}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show_column} {\cf1 (}{\cf5 a_column}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure column }{\cf5 a_column}{\cf3  is visible in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_within_bounds}{\cf1 :} {\cf5 a_column} {\cf1 >} 0 {\b\cf6 and} {\cf5 a_column} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_displayed}{\cf1 :} {\cf5 column_displayed}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show_configurable_target_menu} {\cf1 (}{\cf5 a_x}{\cf1 ,} {\cf5 a_y}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Show the configurable target menu at position }{\cf5 a_x}{\cf3 , }{\cf5 a_y}{\cf3  relative to }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 mode_is_configurable_target_menu}{\cf1 :} {\cf5 mode_is_configurable_target_menu}{\line}
{\tab}{\tab}{\tab}{\cf1 configurable_menu_handler_set}{\cf1 :} {\cf5 configurable_target_menu_handler} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show_header}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure header displayed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 header_displayed}{\cf1 :} {\cf5 is_header_displayed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show_horizontal_scroll_bar}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure a horizontal scroll bar is displayed in }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  when required. Note that this does not force the horizontal}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  scroll bar to be visible, simply ensures that when }{\cf5 virtual_width}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is greater than }{\cf5 viewable_width}{\cf3 , the scroll bar is displayed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 is_horizontal_scroll_bar_show_requested}{\cf1 :} {\cf5 is_horizontal_scroll_bar_show_requested}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show_tree_node_connectors}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure connectors are displayed between nodes of tree structure in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_node_connectors_shown}{\cf1 :} {\cf5 are_tree_node_connectors_shown}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show_vertical_scroll_bar}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure a vertical scroll bar is displayed in }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  when required. Note that this does not force the vertical}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  scroll bar to be visible, simply ensures that when }{\cf5 virtual_height}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is greater than }{\cf5 viewable_height}{\cf3 , the scroll bar is displayed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 is_vertical_scroll_bar_show_requested}{\cf1 :} {\cf5 is_vertical_scroll_bar_show_requested}{\line}
}{\line}
{\tab}{\cf5 {\cf5 unlock_update}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 is_locked}{\cf3  is }{\cf5 False}{\cf3 , thereby ensuring graphical}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  updates occur as normal. The complete client area}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is refreshed to synchronize the display with the contents.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 not_is_locked}{\cf1 :} {\b\cf6 not} {\cf5 is_locked}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_unmerge_radio_button_groups} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_CONTAINER}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove }{\cf5 other}{\cf3  from radio button group of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If no radio button of }{\cf5 other}{\cf3  was checked before removal}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  then first radio button contained will be checked.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 other_is_merged}{\cf1 :} {\b\cf6 attached} {\cf5 cell_merged_radio_button_groups} {\b\cf6 as} l_merged_r_b_groups {\b\cf6 and then} {\cf5 l_merged_r_b_groups}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_merged}{\cf1 :} {\cf5 other}{\b\cf1 .}{\cf5 merged_radio_button_groups} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 not_contained_in_this_group}{\cf1 :} {\b\cf6 attached} {\cf5 cell_merged_radio_button_groups} {\b\cf6 as} l_merged_r_b_groups {\b\cf6 implies} {\b\cf6 not} {\cf5 l_merged_r_b_groups}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 other_first_radio_button_now_selected}{\cf1 :} {\b\cf6 not} {\b\cf6 old} {\cf5 other}{\b\cf1 .}{\cf5 has_selected_radio_button} {\b\cf6 and} {\b\cf6 old} {\cf5 other}{\b\cf1 .}{\cf5 has_radio_button} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 first_radio_button_selected}{\line}
{\tab}{\tab}{\tab}{\cf1 original_radio_button_still_selected}{\cf1 :} {\b\cf6 old} {\cf5 cell_has_selected_radio_button} {\b\cf6 implies} {\cf5 cell_has_selected_radio_button}{\line}
{\tab}{\tab}{\tab}{\cf1 other_first_radio_button_now_selected}{\cf1 :} {\b\cf6 not} {\b\cf6 old} {\cf5 cell_has_selected_radio_button} {\b\cf6 and} {\b\cf6 old} {\cf5 other}{\b\cf1 .}{\cf5 has_radio_button} {\b\cf6 and} {\cf1 (}{\b\cf6 attached} {\b\cf6 old} {\cf5 cell_merged_radio_button_groups} {\b\cf6 as} l_merged_r_b_groups {\b\cf6 and then} {\cf5 l_merged_r_b_groups}{\b\cf1 .}{\cf5 count} {\cf1 =} 1{\cf1 )} {\b\cf6 and} {\cf5 cell_has_radio_button} {\b\cf6 implies} {\cf5 cell_first_radio_button_selected}{\line}
{\tab}{\tab}{\tab}{\cf1 other_original_radio_button_still_selected}{\cf1 :} {\b\cf6 old} {\cf5 other}{\b\cf1 .}{\cf5 has_selected_radio_button} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 has_selected_radio_button}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Element change}{\line}
{\line}
{\tab}{\cf5 {\cf5 clear}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove all items from }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 to_implement_assertion}{\cf1  }{\cf1 (}"EV_GRID.clear - All items positions return `Void'."{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_extend} {\cf1 (}{\cf5 v}{\cf1 :} {\b\cf6 like} {\cf5 cell_item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure that structure includes }{\cf5 v}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do not move cursor.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 extendible}{\cf1 :} {\cf5 cell_extendible}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_void}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 v_parent_void}{\cf1 :} {\cf5 v}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_current}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_parent_of_current}{\cf1 :} {\b\cf6 not} {\cf5 cell_is_parent_recursive}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 v_containable}{\cf1 :} {\cf5 cell_may_contain}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 has_v}{\cf1 :} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_fill} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 CONTAINER} {\cf1 [}{\cf4 EV_WIDGET}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Fill with as many items of }{\cf5 other}{\cf3  as possible.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The representations of }{\cf5 other}{\cf3  and current structure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  need not be the same.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 COLLECTION}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 COLLECTION}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 extendible}{\cf1 :} {\cf5 cell_extendible}{\line}
}{\line}
{\tab}{\cf5 {\cf5 insert_new_column} {\cf1 (}{\cf5 a_index}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Insert a new column immediately before column at index }{\cf5 a_index}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_index_within_range}{\cf1 :} {\cf5 a_index} {\cf1 >} 0 {\b\cf6 and} {\cf5 a_index} {\cf1 <=} {\cf5 column_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 new_column_insertable}{\cf1 :} {\cf5 a_index} {\cf1 <=} {\cf5 column_count} {\b\cf6 implies} {\cf5 column}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 a_index} {\cf1 -} 1{\cf1 )}{\b\cf1 .}{\cf5 max}{\cf1  }{\cf1 (}1{\cf1 )}{\cf1 )}{\b\cf1 .}{\cf5 all_items_may_be_set}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_count_set}{\cf1 :} {\cf5 column_count} {\cf1 =} {\b\cf6 old} {\cf5 column_count} {\cf1 +} 1{\line}
}{\line}
{\tab}{\cf5 {\cf5 insert_new_row} {\cf1 (}{\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Insert a new row immediately before row at index }{\cf5 i}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 i_within_range}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and} {\cf5 i} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 not_inserting_within_existing_subrow_structure}{\cf1 :} {\cf5 i} {\cf1 <=} {\cf5 row_count} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_set}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count} {\cf1 +} 1{\line}
}{\line}
{\tab}{\cf5 {\cf5 insert_new_row_parented} {\cf1 (}{\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 a_parent_row}{\cf1 :} {\cf4 EV_GRID_ROW}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Insert a new row immediately before row at index }{\cf5 i}{\cf3  and make that row a subnode of }{\cf5 a_parent_row}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_enabled}{\cf1 :} {\cf5 is_tree_enabled}{\line}
{\tab}{\tab}{\tab}{\cf1 i_positive}{\cf1 :} {\cf5 i} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 i_less_than_row_count}{\cf1 :} {\cf5 i} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 a_parent_row_not_void}{\cf1 :} {\cf5 a_parent_row} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 a_parent_row_in_current}{\cf1 :} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid_for_parent}{\cf1 :} {\cf5 i} {\cf1 >} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\b\cf6 and} {\cf5 i} {\cf1 <=} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 not_inserting_within_existing_subrow_structure}{\cf1 :} {\cf5 i} {\cf1 <} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\cf5 a_parent_row}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_set}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 subrow_count_set}{\cf1 :} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count} {\cf1 =} {\b\cf6 old} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count} {\cf1 +} 1{\line}
}{\line}
{\tab}{\cf5 {\cf5 insert_new_rows} {\cf1 (}{\cf5 rows_to_insert}{\cf1 ,} {\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Insert }{\cf5 rows_to_insert}{\cf3  rows immediately before row at index }{\cf5 i}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 i_within_range}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and} {\cf5 i} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 rows_to_insert_positive}{\cf1 :} {\cf5 rows_to_insert} {\cf1 >=} 1{\line}
{\tab}{\tab}{\tab}{\cf1 not_inserting_within_existing_subrow_structure}{\cf1 :} {\cf5 i} {\cf1 <=} {\cf5 row_count} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_set}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count} {\cf1 +} {\cf5 rows_to_insert}{\line}
}{\line}
{\tab}{\cf5 {\cf5 insert_new_rows_parented} {\cf1 (}{\cf5 rows_to_insert}{\cf1 ,} {\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 a_parent_row}{\cf1 :} {\cf4 EV_GRID_ROW}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Insert }{\cf5 rows_to_insert}{\cf3  new rows immediately before row at index }{\cf5 i}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make these newly inserted rows subnodes of }{\cf5 a_parent_row}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_enabled}{\cf1 :} {\cf5 is_tree_enabled}{\line}
{\tab}{\tab}{\tab}{\cf1 i_positive}{\cf1 :} {\cf5 i} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 rows_to_insert_positive}{\cf1 :} {\cf5 rows_to_insert} {\cf1 >=} 1{\line}
{\tab}{\tab}{\tab}{\cf1 i_less_than_row_count}{\cf1 :} {\cf5 i} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 a_parent_row_not_void}{\cf1 :} {\cf5 a_parent_row} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid_for_parent}{\cf1 :} {\cf5 i} {\cf1 >} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\b\cf6 and} {\cf5 i} {\cf1 <=} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 not_inserting_within_existing_subrow_structure}{\cf1 :} {\cf5 i} {\cf1 <} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\cf5 a_parent_row}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_set}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count} {\cf1 +} {\cf5 rows_to_insert}{\line}
{\tab}{\tab}{\tab}{\cf1 subrow_count_set}{\cf1 :} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count} {\cf1 =} {\b\cf6 old} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count} {\cf1 +} {\cf5 rows_to_insert}{\line}
}{\line}
{\tab}{\cf5 {\cf5 move_column} {\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 j}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move column at index }{\cf5 i}{\cf3  and insert immediately before column at index }{\cf5 j}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  To move column }{\cf5 i}{\cf3  to the last index in the grid, use }{\cf5 j}{\cf3  = }{\cf5 column_count + 1}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid}{\cf1 :} {\cf5 j} {\cf1 >} 0 {\b\cf6 and then} {\cf5 j} {\cf1 <=} {\cf5 column_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 column_i_moveable}{\cf1 :} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\b\cf1 .}{\cf5 all_items_may_be_removed}{\line}
{\tab}{\tab}{\tab}{\cf1 column_j_settable}{\cf1 :} {\cf5 j} {\cf1 <=} {\cf5 column_count} {\b\cf6 implies} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )}{\b\cf1 .}{\cf5 all_items_may_be_set}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 columns_moved}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 <=} {\cf5 i} {\b\cf6 implies} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\b\cf6 implies} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 <} {\cf5 i} {\b\cf6 implies} {\cf1 (}{\cf5 column}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 i} {\cf1 -} 1{\cf1 )}{\b\cf1 .}{\cf5 max}{\cf1  }{\cf1 (}1{\cf1 )}{\cf1 )}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\cf1 +} 1 {\b\cf6 implies} {\cf1 (}{\cf5 column}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 i} {\cf1 +} 1{\cf1 )}{\b\cf1 .}{\cf5 min}{\cf1  }{\cf1 (}{\cf5 column_count}{\cf1 )}{\cf1 )}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 column_count_unchanged}{\cf1 :} {\cf5 column_count} {\cf1 =} {\b\cf6 old} {\cf5 column_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 move_columns} {\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 j}{\cf1 ,} {\cf5 n}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move }{\cf5 n}{\cf3  columns starting at column }{\cf5 i}{\cf3  and insert immediately before column }{\cf5 j}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid}{\cf1 :} {\cf5 j} {\cf1 >} 0 {\b\cf6 and then} {\cf5 j} {\cf1 <=} {\cf5 column_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 n_valid}{\cf1 :} {\cf5 n} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 +} {\cf5 n} {\cf1 <=} {\cf5 column_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 move_not_overlapping}{\cf1 :} {\cf5 n} {\cf1 >} 1 {\b\cf6 implies} {\cf1 (}{\cf5 j} {\cf1 <=} {\cf5 i} {\b\cf6 or else} {\cf5 j} {\cf1 >=} {\cf5 i} {\cf1 +} {\cf5 n}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 columns_removable}{\cf1 :} {\cf5 are_columns_removable}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 n}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 column_j_settable}{\cf1 :} {\cf5 j} {\cf1 <=} {\cf5 column_count} {\b\cf6 implies} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )}{\b\cf1 .}{\cf5 all_items_may_be_set}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 columns_moved}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 <} {\cf5 i} {\b\cf6 implies} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\b\cf6 and then} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\cf1 +} {\cf5 n} {\b\cf6 implies} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} {\cf5 n}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\b\cf6 and then} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 column_count_unchanged}{\cf1 :} {\cf5 column_count} {\cf1 =} {\b\cf6 old} {\cf5 column_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 move_row} {\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 j}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move row at index }{\cf5 i}{\cf3  immediately before row at index }{\cf5 j}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 j}{\cf3  = }{\cf5 row_count + 1}{\cf3  then row }{\cf5 i}{\cf3  is moved to the last index in the grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Row }{\cf5 i}{\cf3  will be unparented if it has a }{\cf5 parent_row}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid}{\cf1 :} {\cf5 j} {\cf1 >} 0 {\b\cf6 and then} {\cf5 j} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 row_has_no_subrows}{\cf1 :} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\b\cf1 .}{\cf5 subrow_count} {\cf1 =} 0{\line}
{\tab}{\tab}{\tab}{\cf1 not_breaking_existing_subrow_structure}{\cf1 :} {\cf5 j} {\cf1 =} {\cf5 row_count} {\cf1 +} 1 {\b\cf6 or} {\cf1 (}{\cf5 j} {\cf1 =} {\cf5 i} {\b\cf6 or} {\cf1 (}{\cf5 j} {\cf1 =} {\cf5 i} {\cf1 +} 1 {\b\cf6 and} {\cf1 (}{\cf5 i} {\cf1 +} 1 {\cf1 <=} {\cf5 row_count}{\cf1 )}{\cf1 )} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} 1{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 rows_moved}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 <=} {\cf5 i} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 <} {\cf5 i} {\b\cf6 implies} {\cf1 (}{\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 i} {\cf1 -} 1{\cf1 )}{\b\cf1 .}{\cf5 max}{\cf1  }{\cf1 (}1{\cf1 )}{\cf1 )}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\cf1 +} 1 {\b\cf6 implies} {\cf1 (}{\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 i} {\cf1 +} 1{\cf1 )}{\b\cf1 .}{\cf5 min}{\cf1  }{\cf1 (}{\cf5 row_count}{\cf1 )}{\cf1 )}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_unchanged}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 move_row_to_parent} {\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 j}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 a_parent_row}{\cf1 :} {\cf4 EV_GRID_ROW}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move row at index }{\cf5 i}{\cf3  immediately before row at index }{\cf5 j}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Row }{\cf5 i}{\cf3  is re-parented as a subrow of }{\cf5 a_parent_row}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 j}{\cf3  = }{\cf5 row_count + 1}{\cf3  then row }{\cf5 i}{\cf3  is moved to the last index in the grid.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_enabled}{\cf1 :} {\cf5 is_tree_enabled}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid}{\cf1 :} {\cf5 j} {\cf1 >} 0 {\b\cf6 and then} {\cf5 j} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 row_has_no_subrows}{\cf1 :} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\b\cf1 .}{\cf5 subrow_count} {\cf1 =} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_parent_row_not_void}{\cf1 :} {\cf5 a_parent_row} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid_for_move_to_a_parent_row}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 =} {\cf5 i} {\cf1 +} 1 {\b\cf6 implies} {\cf1 (}{\cf5 i} {\cf1 >} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\b\cf6 and} {\cf5 i} {\cf1 <=} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\cf1 +} 1{\cf1 )}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\b\cf6 and} {\cf5 j} {\cf1 <=} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\cf1 +} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 rows_may_be_moved}{\cf1 :} {\cf5 rows_may_be_moved}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 ,} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 not_inserting_within_existing_subrow_structure}{\cf1 :} {\cf5 j} {\cf1 <} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\cf5 a_parent_row}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 rows_moved}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 <=} {\cf5 i} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 <} {\cf5 i} {\b\cf6 implies} {\cf1 (}{\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 i} {\cf1 -} 1{\cf1 )}{\b\cf1 .}{\cf5 max}{\cf1  }{\cf1 (}1{\cf1 )}{\cf1 )}{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\cf1 +} 1 {\b\cf6 implies} {\cf1 (}{\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 i} {\cf1 +} 1{\cf1 )}{\b\cf1 .}{\cf5 min}{\cf1  }{\cf1 (}{\cf5 row_count}{\cf1 )}{\cf1 )}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_unchanged}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 move_rows} {\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 j}{\cf1 ,} {\cf5 n}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move }{\cf5 n}{\cf3  rows starting at index }{\cf5 i}{\cf3  immediately before row at index }{\cf5 j}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 j}{\cf3  = }{\cf5 row_count + 1}{\cf3  the rows are moved to the very bottom of the grid.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 is_tree_enabled}{\cf3 , all rows moved that share the same tree structure depth}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as row }{\cf5 i}{\cf3  are unparented and set as root rows within the grid tree.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All parent rows within the rows moved that have a tree structure depth}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  greater than that of row }{\cf5 i}{\cf3  are left parented.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid}{\cf1 :} {\cf5 j} {\cf1 >} 0 {\b\cf6 and then} {\cf5 j} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 n_valid}{\cf1 :} {\cf5 n} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 +} {\cf5 n} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 move_not_overlapping}{\cf1 :} {\cf5 n} {\cf1 >} 1 {\b\cf6 implies} {\cf1 (}{\cf5 j} {\cf1 <=} {\cf5 i} {\b\cf6 or else} {\cf5 j} {\cf1 >=} {\cf5 i} {\cf1 +} {\cf5 n}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 rows_may_be_moved}{\cf1 :} {\cf5 rows_may_be_moved}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 n}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 not_breaking_existing_subrow_structure}{\cf1 :} {\cf5 j} {\cf1 =} {\cf5 row_count} {\cf1 +} 1 {\b\cf6 or} {\cf1 (}{\cf5 j} {\cf1 =} {\cf5 i} {\b\cf6 or} {\cf1 (}{\cf5 j} {\cf1 =} {\cf5 i} {\cf1 +} {\cf5 n} {\b\cf6 and} {\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n} {\cf1 <=} {\cf5 row_count}{\cf1 )}{\cf1 )} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 rows_moved}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 <=} {\cf5 i} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\cf1 +} {\cf5 n} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} {\cf5 n}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_unchanged}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 move_rows_to_parent} {\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 j}{\cf1 ,} {\cf5 n}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 a_parent_row}{\cf1 :} {\cf4 EV_GRID_ROW}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move }{\cf5 n}{\cf3  rows starting at index }{\cf5 i}{\cf3  immediately before row at index }{\cf5 j}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All rows moved that share the same tree structure depth}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as row }{\cf5 i}{\cf3  are reparented as a subrow of }{\cf5 a_parent_row}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  All parent rows within the rows moved that have a tree structure depth}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  greater than that of row }{\cf5 i}{\cf3  are left parented.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_enabled}{\cf1 :} {\cf5 is_tree_enabled}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid}{\cf1 :} {\cf5 i} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid}{\cf1 :} {\cf5 j} {\cf1 >} 0 {\b\cf6 and then} {\cf5 j} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 n_valid}{\cf1 :} {\cf5 n} {\cf1 >} 0 {\b\cf6 and then} {\cf5 i} {\cf1 +} {\cf5 n} {\cf1 <=} {\cf5 row_count} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\cf1 move_not_overlapping}{\cf1 :} {\cf5 n} {\cf1 >} 1 {\b\cf6 implies} {\cf1 (}{\cf5 j} {\cf1 <=} {\cf5 i} {\b\cf6 or else} {\cf5 j} {\cf1 >=} {\cf5 i} {\cf1 +} {\cf5 n}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 rows_may_be_moved}{\cf1 :} {\cf5 rows_may_be_moved}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 ,} {\cf5 n}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 a_parent_row_not_void}{\cf1 :} {\cf5 a_parent_row} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 j_valid_for_move_to_a_parent_row}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 =} {\cf5 i} {\cf1 +} {\cf5 n} {\b\cf6 implies} {\cf1 (}{\cf5 i} {\cf1 >} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\b\cf6 and} {\cf5 i} {\cf1 <=} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\cf1 +} 1{\cf1 )}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\b\cf6 and} {\cf5 j} {\cf1 <=} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\cf1 +} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 not_inserting_within_existing_subrow_structure}{\cf1 :} {\cf5 j} {\cf1 <=} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 a_parent_row}{\b\cf1 .}{\cf5 subrow_count_recursive} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )}{\b\cf1 .}{\cf5 parent_row} {\cf1 =} {\cf5 a_parent_row}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 rows_moved}{\cf1 :} {\cf1 (}{\cf5 j} {\cf1 <} {\cf5 i} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )}{\cf1 )} {\b\cf6 and} {\cf1 (}{\cf5 j} {\cf1 >} {\cf5 i} {\cf1 +} {\cf5 n} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} {\cf5 n}{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 j} {\cf1 -} 1{\cf1 )} {\cf1 =} {\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} {\cf5 n} {\cf1 -} 1{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_unchanged}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_put} {\cf1 (}{\cf5 v}{\cf1 :} {\b\cf6 like} {\cf5 cell_item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Replace }{\cf5 item}{\cf3  with }{\cf5 v}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 EV_CONTAINER}{\cf3  as synonym of }{\cf5 replace}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 writable}{\cf1 :} {\cf5 Writable}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_void}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 v_parent_void}{\cf1 :} {\cf5 v}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_current}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_parent_of_current}{\cf1 :} {\b\cf6 not} {\cf5 cell_is_parent_recursive}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 v_containable}{\cf1 :} {\cf5 cell_may_contain}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 has_v}{\cf1 :} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 not_has_old_item}{\cf1 :} {\b\cf6 old} {\cf5 Readable} {\b\cf6 implies} {\cf1 (}{\b\cf6 attached} {\b\cf6 old} {\cf5 implementation}{\b\cf1 .}{\cf5 cell_item} {\b\cf6 as} l_item {\b\cf6 and then} {\b\cf6 not} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 l_item}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_help_context}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove key press action associated with }{\cf5 EV_APPLICATION.help_key}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_HELP_CONTEXTABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_HELP_CONTEXTABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 help_context_not_void}{\cf1 :} {\cf5 help_context} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_HELP_CONTEXTABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 no_help_context}{\cf1 :} {\cf5 help_context} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_item} {\cf1 (}{\cf5 a_column}{\cf1 ,} {\cf5 a_row}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove grid item at position (}{\cf5 a_column}{\cf3 , }{\cf5 a_row}{\cf3 ).}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_positive}{\cf1 :} {\cf5 a_column} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_positive}{\cf1 :} {\cf5 a_row} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 item_may_be_removed_if_row_is_a_subrow}{\cf1 :} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 is_part_of_tree_structure} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 is_index_valid_for_item_removal_if_tree_node}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 item_removed}{\cf1 :} {\cf5 item}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 ,} {\cf5 a_row}{\cf1 )} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_background_pixmap}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove image displayed on }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PIXMAPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PIXMAPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PIXMAPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 pixmap_removed}{\cf1 :} {\cf5 cell_background_pixmap} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_tooltip}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make }{\cf5 tooltip}{\cf3  empty.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_TOOLTIPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_TOOLTIPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_TOOLTIPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 tooltip_removed}{\cf1 :} {\cf5 tooltip}{\b\cf1 .}{\cf5 is_empty}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_replace} {\cf1 (}{\cf5 v}{\cf1 :} {\b\cf6 like} {\cf5 cell_item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Replace }{\cf5 item}{\cf3  with }{\cf5 v}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 EV_CONTAINER}{\cf3  as synonym of }{\cf5 put}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 writable}{\cf1 :} {\cf5 Writable}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_void}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 v_parent_void}{\cf1 :} {\cf5 v}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_current}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_parent_of_current}{\cf1 :} {\b\cf6 not} {\cf5 cell_is_parent_recursive}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 v_containable}{\cf1 :} {\cf5 cell_may_contain}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 has_v}{\cf1 :} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 not_has_old_item}{\cf1 :} {\b\cf6 old} {\cf5 Readable} {\b\cf6 implies} {\cf1 (}{\b\cf6 attached} {\b\cf6 old} {\cf5 implementation}{\b\cf1 .}{\cf5 cell_item} {\b\cf6 as} l_item {\b\cf6 and then} {\b\cf6 not} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 l_item}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_background_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\b\cf6 like} {\cf5 background_color}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_color}{\cf3  to }{\cf5 background_color}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_COLORIZABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 background_color_assigned}{\cf1 :} {\cf5 background_color}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 a_color}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_data} {\cf1 (}{\cf5 some_data}{\cf1 :} {\b\cf6 like} {\cf5 data}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 some_data}{\cf3  to }{\cf5 data}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 data_assigned}{\cf1 :} {\cf5 data} {\cf1 =} {\cf5 some_data}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_foreground_color} {\cf1 (}{\cf5 a_color}{\cf1 :} {\b\cf6 like} {\cf5 foreground_color}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_color}{\cf3  to }{\cf5 foreground_color}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_COLORIZABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_color_not_void}{\cf1 :} {\cf5 a_color} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 foreground_color_assigned}{\cf1 :} {\cf5 foreground_color}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 a_color}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_help_context} {\cf1 (}{\cf5 an_help_context}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 EV_HELP_CONTEXT}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 an_help_context}{\cf3  to }{\cf5 help_context}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_HELP_CONTEXTABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_HELP_CONTEXTABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 an_help_context_not_void}{\cf1 :} {\cf5 an_help_context} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_HELP_CONTEXTABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 help_context_assigned}{\cf1 :} {\b\cf6 attached} {\cf5 help_context} {\b\cf6 as} l_help_context {\b\cf6 and then} {\cf5 l_help_context}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 an_help_context}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_identifier_name} {\cf1 (}{\cf5 a_name}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 identifier_name}{\cf3  to }{\cf5 a_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_IDENTIFIABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_IDENTIFIABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 a_name_not_void}{\cf1 :} {\cf5 a_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 a_name_not_empty}{\cf1 :} {\b\cf6 not} {\cf5 a_name}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\tab}{\cf1 no_period_in_name}{\cf1 :} {\b\cf6 not} {\cf5 a_name}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}'.'{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 no_special_regexp_characters_in_name}{\cf1 :} {\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_IDENTIFIABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 identifier_name_set}{\cf1 :} {\cf5 identifier_name}{\b\cf1 .}{\cf5 same_string_general}{\cf1  }{\cf1 (}{\cf5 a_name}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_item} {\cf1 (}{\cf5 a_column}{\cf1 ,} {\cf5 a_row}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 a_item}{\cf1 :} {\cf4 EV_GRID_ITEM}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set grid item at position (}{\cf5 a_column}{\cf3 , }{\cf5 a_row}{\cf3 ) to }{\cf5 a_item}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 a_item}{\cf3  is }{\cf5 Void}{\cf3 , the current item (if any) is removed.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_item_not_parented}{\cf1 :} {\cf5 a_item} {\cf1 /=} {\b\cf6 Void} {\b\cf6 implies} {\cf5 a_item}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_positive}{\cf1 :} {\cf5 a_column} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_positive}{\cf1 :} {\cf5 a_row} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 item_may_be_added_if_row_is_a_subrow}{\cf1 :} {\cf5 a_item} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a_row} {\cf1 <=} {\cf5 row_count} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 is_part_of_tree_structure} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 is_index_valid_for_item_setting_if_tree_node}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 item_may_be_removed_if_row_is_a_subrow}{\cf1 :} {\cf5 a_item} {\cf1 =} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a_row} {\cf1 <=} {\cf5 row_count} {\b\cf6 and then} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 is_part_of_tree_structure} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 is_index_valid_for_item_removal_if_tree_node}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 item_set}{\cf1 :} {\cf5 item}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 ,} {\cf5 a_row}{\cf1 )} {\cf1 =} {\cf5 a_item}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_minimum_height} {\cf1 (}{\cf5 a_minimum_height}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 a_minimum_height}{\cf3  in pixels to }{\cf5 minimum_height}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 height}{\cf3  is less than }{\cf5 a_minimum_height}{\cf3 , resize.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  From now, }{\cf5 minimum_height}{\cf3  is fixed and will not be changed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  dynamically by the application anymore.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_height_positive}{\cf1 :} {\cf5 a_minimum_height} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_height_assigned}{\cf1 :} {\cf1 (}{\cf5 a_minimum_height} {\cf1 >} 0 {\b\cf6 implies} {\cf5 minimum_height} {\cf1 =} {\cf5 a_minimum_height}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_height} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 minimum_height} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_height_set_by_user_set}{\cf1 :} {\cf5 minimum_height_set_by_user}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_minimum_size} {\cf1 (}{\cf5 a_minimum_width}{\cf1 ,} {\cf5 a_minimum_height}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_minimum_height}{\cf3  to }{\cf5 minimum_height}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  and }{\cf5 a_minimum_width}{\cf3  to }{\cf5 minimum_width}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 width}{\cf3  or }{\cf5 height}{\cf3  is less than minimum size, resize.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  From now, minimum size is fixed and will not be changed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  dynamically by the application anymore.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_width_positive}{\cf1 :} {\cf5 a_minimum_width} {\cf1 >=} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_height_positive}{\cf1 :} {\cf5 a_minimum_height} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_width_assigned}{\cf1 :} {\cf1 (}{\cf5 a_minimum_width} {\cf1 >} 0 {\b\cf6 implies} {\cf5 minimum_width} {\cf1 =} {\cf5 a_minimum_width}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_width} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 minimum_width} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_height_assigned}{\cf1 :} {\cf1 (}{\cf5 a_minimum_height} {\cf1 >} 0 {\b\cf6 implies} {\cf5 minimum_height} {\cf1 =} {\cf5 a_minimum_height}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_height} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 minimum_height} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_height_set_by_user_set}{\cf1 :} {\cf5 minimum_height_set_by_user}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_width_set_by_user_set}{\cf1 :} {\cf5 minimum_width_set_by_user}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_minimum_width} {\cf1 (}{\cf5 a_minimum_width}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_minimum_width}{\cf3  in pixels to }{\cf5 minimum_width}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 width}{\cf3  is less than }{\cf5 a_minimum_width}{\cf3 , resize.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  From now, }{\cf5 minimum_width}{\cf3  is fixed and will not be changed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  dynamically by the application anymore.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_width_positive}{\cf1 :} {\cf5 a_minimum_width} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_width_assigned}{\cf1 :} {\cf1 (}{\cf5 a_minimum_width} {\cf1 >} 0 {\b\cf6 implies} {\cf5 minimum_width} {\cf1 =} {\cf5 a_minimum_width}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_width} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 minimum_width} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_width_set_by_user_set}{\cf1 :} {\cf5 minimum_width_set_by_user}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_background_pixmap} {\cf1 (}{\cf5 a_pixmap}{\cf1 :} {\cf4 EV_PIXMAP}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Display image of }{\cf5 a_pixmap}{\cf3  on }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Image of }{\cf5 pixmap}{\cf3  will be a copy of }{\cf5 a_pixmap}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Image may be scaled in some descendents, i.e EV_TREE_ITEM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  See EV_TREE.set_pixmaps_size.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PIXMAPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_PIXMAPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 pixmap_not_void}{\cf1 :} {\cf5 a_pixmap} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_pointer_style} {\cf1 (}{\cf5 a_cursor}{\cf1 :} {\cf4 EV_POINTER_STYLE}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_cursor}{\cf3  to }{\cf5 pointer_style}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_cursor_not_void}{\cf1 :} {\cf5 a_cursor} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 pointer_style_assigned}{\cf1 :} {\b\cf6 attached} {\cf5 pointer_style} {\b\cf6 as} l_pointer_style {\b\cf6 and then} {\cf5 l_pointer_style}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 a_cursor}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_tooltip} {\cf1 (}{\cf5 a_tooltip}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_tooltip}{\cf3  to }{\cf5 tooltip}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_TOOLTIPABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_TOOLTIPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 tooltip}{\cf1 :} {\cf5 a_tooltip} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_TOOLTIPABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 tooltip_assigned}{\cf1 :} {\cf5 tooltip}{\b\cf1 .}{\cf5 same_string_general}{\cf1  }{\cf1 (}{\cf5 a_tooltip}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 cloned}{\cf1 :} {\cf5 tooltip} {\cf1 /=} {\cf5 a_tooltip}{\line}
}{\line}
{\tab}{\cf5 {\cf5 wipe_out}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove all columns and rows from }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 columns_removed}{\cf1 :} {\cf5 column_count} {\cf1 =} 0{\line}
{\tab}{\tab}{\tab}{\cf1 rows_removed}{\cf1 :} {\cf5 row_count} {\cf1 =} 0{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Removal}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 free_id}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Free the entry associated with }{\cf5 object_id}{\cf3  if any.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf1 object_freed}{\cf1 :} {\cf5 id_freed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_prune} {\cf1 (}{\cf5 v}{\cf1 :} {\cf4 EV_WIDGET}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove }{\cf5 v}{\cf3  if contained.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 writable}{\cf1 :} {\cf5 Prunable}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_void}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 v_parent_void}{\cf1 :} {\cf5 v}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 v_not_current}{\cf1 :} {\cf5 v} {\cf1 /=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 has_v}{\cf1 :} {\b\cf6 not} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 EV_CELL}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 not} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_prune_all} {\cf1 (}{\cf5 v}{\cf1 :} {\cf4 EV_WIDGET}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove all occurrences of }{\cf5 v}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Reference or object equality,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  based on }{\cf5 object_comparison}{\cf3 .)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 COLLECTION}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 COLLECTION}{\line}
{\tab}{\tab}{\tab}{\cf1 prunable}{\cf1 :} {\cf5 Prunable}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 COLLECTION}{\line}
{\tab}{\tab}{\tab}{\cf1 no_more_occurrences}{\cf1 :} {\b\cf6 not} {\cf5 cell_has}{\cf1  }{\cf1 (}{\cf5 v}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_column} {\cf1 (}{\cf5 a_column}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove column }{\cf5 a_column}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_positive}{\cf1 :} {\cf5 a_column} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_column_less_than_column_count}{\cf1 :} {\cf5 a_column} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\tab}{\cf1 column_may_be_removed}{\cf1 :} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\b\cf1 .}{\cf5 all_items_may_be_removed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 column_count_updated}{\cf1 :} {\cf5 column_count} {\cf1 =} {\b\cf6 old} {\cf5 column_count} {\cf1 -} 1{\line}
{\tab}{\tab}{\tab}{\cf1 old_column_removed}{\cf1 :} {\cf1 (}{\b\cf6 old} {\cf5 column}{\cf1  }{\cf1 (}{\cf5 a_column}{\cf1 )}{\cf1 )}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_row} {\cf1 (}{\cf5 a_row}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove row }{\cf5 a_row}{\cf3  and all subrows recursively.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 row (a_row).subrow_count_recursive}{\cf3  is greater than 0 then}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  all subrows of the row are also removed from }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_positive}{\cf1 :} {\cf5 a_row} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_row_less_than_row_count}{\cf1 :} {\cf5 a_row} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_updated}{\cf1 :} {\cf5 row_count} {\cf1 =} {\b\cf6 old} {\cf5 row_count} {\cf1 -} {\cf1 (}{\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\b\cf1 .}{\cf5 subrow_count_recursive} {\cf1 +} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 old_row_removed}{\cf1 :} {\cf1 (}{\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 a_row}{\cf1 )}{\cf1 )}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 to_implement_assertion}{\cf1  }{\cf1 (}"EV_GRID.remove_row%T%TAll old recursive subrows removed."{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_rows} {\cf1 (}{\cf5 lower_index}{\cf1 ,} {\cf5 upper_index}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove all rows from }{\cf5 lower_index}{\cf3  to }{\cf5 upper_index}{\cf3  inclusive.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_lower_index}{\cf1 :} {\cf5 lower_index} {\cf1 >=} 1 {\b\cf6 and} {\cf5 lower_index} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_upper_index}{\cf1 :} {\cf5 upper_index} {\cf1 >=} {\cf5 lower_index} {\b\cf6 and} {\cf5 upper_index} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_final_row_in_tree_structure}{\cf1 :} {\cf1 (}{\cf5 is_tree_enabled} {\b\cf6 and then} {\b\cf6 attached} {\cf5 highest_parent_row_within_bounds}{\cf1  }{\cf1 (}{\cf5 lower_index}{\cf1 ,} {\cf5 upper_index}{\cf1 )} {\b\cf6 as} l_row {\b\cf6 implies} {\cf5 upper_index} {\cf1 =} {\cf5 l_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 l_row}{\b\cf1 .}{\cf5 subrow_count_recursive}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 is_tree_enabled} {\b\cf6 and then} {\cf5 highest_parent_row_within_bounds}{\cf1  }{\cf1 (}{\cf5 lower_index}{\cf1 ,} {\cf5 upper_index}{\cf1 )} {\cf1 =} {\b\cf6 Void} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 upper_index}{\cf1 )}{\b\cf1 .}{\cf5 subrow_count} {\cf1 =} 0{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_final_row_in_tree_structure}{\cf1 :} {\cf1 (}{\cf5 is_tree_enabled} {\b\cf6 and then} {\b\cf6 attached} {\cf5 highest_parent_row_within_bounds}{\cf1  }{\cf1 (}{\cf5 lower_index}{\cf1 ,} {\cf5 upper_index}{\cf1 )} {\b\cf6 as} l_row {\b\cf6 implies} {\cf5 upper_index} {\cf1 =} {\cf5 l_row}{\b\cf1 .}{\cf5 index} {\cf1 +} {\cf5 l_row}{\b\cf1 .}{\cf5 subrow_count_recursive}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 is_tree_enabled} {\b\cf6 and then} {\cf5 highest_parent_row_within_bounds}{\cf1  }{\cf1 (}{\cf5 lower_index}{\cf1 ,} {\cf5 upper_index}{\cf1 )} {\cf1 =} {\b\cf6 Void} {\b\cf6 implies} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 upper_index}{\cf1 )}{\b\cf1 .}{\cf5 subrow_count} {\cf1 =} 0{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_consistent}{\cf1 :} {\cf5 row_count} {\cf1 =} {\cf1 (}{\b\cf6 old} {\cf5 row_count}{\cf1 )} {\cf1 -} {\cf1 (}{\cf5 upper_index} {\cf1 -} {\cf5 lower_index} {\cf1 +} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 lower_row_removed}{\cf1 :} {\cf1 (}{\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 lower_index}{\cf1 )}{\cf1 )}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 upper_row_removed}{\cf1 :} {\cf1 (}{\b\cf6 old} {\cf5 row}{\cf1  }{\cf1 (}{\cf5 upper_index}{\cf1 )}{\cf1 )}{\b\cf1 .}{\cf5 parent} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 to_implement_assertion}{\cf1  }{\cf1 (}{\b\cf6 once} "middle_rows_removed from lower to upper all old rows parent = Void"{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_wipe_out}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove }{\cf5 item}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 COLLECTION}{\line}
{\tab}{\tab}{\tab}{\cf1 prunable}{\cf1 :} {\cf5 Prunable}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 COLLECTION}{\line}
{\tab}{\tab}{\tab}{\cf1 wiped_out}{\cf1 :} {\cf5 cell_is_empty}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Conversion}{\line}
{\line}
{\tab}{\cf5 {\cf5 cell_linear_representation}{\cf1 :} {\cf4 LINEAR} {\cf1 [}{\b\cf6 like} {\cf5 cell_item}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Representation as a linear structure}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CELL}{\cf3 )}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Duplication}{\line}
{\line}
{\tab}{\cf5 {\cf5 copy} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_GRID}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Update current object using fields of object attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 other}{\cf3 , so as to yield equal objects.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Current} {\cf1 ~} {\cf5 other}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_GRID}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Effect equivalent to that of:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		}{\cf5 copy}{\cf3  (}{\cf5 other}{\cf3  . }{\cf5 deep_twin}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_twin}{\cf1 :} {\cf4 EV_GRID}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object structure recursively duplicated from Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 EV_GRID}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy every field of }{\cf5 other}{\cf3  onto corresponding field}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_standard_equal}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_twin}{\cf1 :} {\cf4 EV_GRID}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 standard_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\b\cf6 Current}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 twin}{\cf1 :} {\cf4 EV_GRID}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object equal to }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 twin}{\cf3  calls }{\cf5 copy}{\cf3 ; to change copying/twinning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\b\cf6 Current}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default}{\cf1 :} {\cf4 EV_GRID}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of object's type}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default_pointer}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Avoid the need to write }{\cf5 p}{\cf3 .}{\cf5 default}{\cf3  for}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  some }{\cf5 p}{\cf3  of type }{\cf5 POINTER}{\cf3 .)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
}{\line}
{\tab}{\cf5 {\cf5 default_rescue}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process exception for routines with no Rescue clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 do_nothing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Execute a null action.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_propagate_background_color}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Propagate }{\cf5 background_color}{\cf3  recursively, to all children.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 background_color_propagated}{\cf1 :} {\cf5 cell_background_color_propagated}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_propagate_foreground_color}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Propagate }{\cf5 foreground_color}{\cf3  recursively, to all children.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 foreground_color_propagated}{\cf1 :} {\cf5 cell_foreground_color_propagated}{\line}
}{\line}
{\tab}{\cf5 {\cf5 refresh_now}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Force an immediate redraw of }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\line}
{\line}
{\tab}{\cf5 {\cf5 column_type}{\cf1 :} {\cf4 EV_GRID_COLUMN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Type use for column objects.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May be redefined by EV_GRID descendents.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_TYPES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_TYPES}{\line}
{\tab}{\tab}{\tab}{\cf1 callable}{\cf1 :} {\b\cf6 False}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_type}{\cf1 :} {\cf4 EV_GRID_ROW}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Type used for row objects.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May be redefined by EV_GRID descendents.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GRID_TYPES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_GRID_TYPES}{\line}
{\tab}{\tab}{\tab}{\cf1 callable}{\cf1 :} {\b\cf6 False}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Activation Handling}{\line}
{\line}
{\tab}{\cf5 {\cf5 propagate_key_press} {\cf1 (}{\cf5 a_key}{\cf1 :} {\cf4 EV_KEY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Propagate key press for }{\cf5 a_key}{\cf3  to }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Useful for handling custom navigation during item activation.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Command}{\line}
{\line}
{\tab}{\cf5 {\cf5 destroy}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Destroy underlying native toolkit object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Render }{\cf5 Current}{\cf3  unusable.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_destroyed}{\cf1 :} {\cf5 is_destroyed}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Contract support}{\line}
{\line}
{\tab}{\cf5 {\cf5 are_columns_removable} {\cf1 (}{\cf5 a_index}{\cf1 ,} {\cf5 n}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 n}{\cf3  columns starting at column index }{\cf5 a_index}{\cf3  removable from }{\cf5 Current}{\cf3 ?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_index_positive}{\cf1 :} {\cf5 a_index} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 n_positive}{\cf1 :} {\cf5 n} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_index_not_greater_than_column_count}{\cf1 :} {\cf5 a_index} {\cf1 <=} {\cf5 column_count}{\line}
{\tab}{\tab}{\tab}{\cf1 n_valid}{\cf1 :} {\cf5 a_index} {\cf1 +} {\cf5 n} {\cf1 <=} {\cf5 column_count} {\cf1 +} 1{\line}
}{\line}
{\tab}{\cf5 {\cf5 highest_parent_row_within_bounds} {\cf1 (}{\cf5 lower_index}{\cf1 ,} {\cf5 upper_index}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 EV_GRID_ROW}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return the highest level }{\cf5 parent_row}{\cf3  recursively of row }{\cf5 upper_index}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  that has an index greater or equal to }{\cf5 lower_index}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 tree_enabled}{\cf1 :} {\cf5 is_tree_enabled}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_lower_index}{\cf1 :} {\cf5 lower_index} {\cf1 >=} 1 {\b\cf6 and} {\cf5 lower_index} {\cf1 <=} {\cf5 row_count}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_upper_index}{\cf1 :} {\cf5 upper_index} {\cf1 >=} {\cf5 lower_index} {\b\cf6 and} {\cf5 upper_index} {\cf1 <=} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_background_color_void}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 background_color}{\cf3  void?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_COLORIZABLE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_bridge_ok} {\cf1 (}{\cf5 a_string}{\cf1 :} {\cf4 STRING_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 a_string}{\cf3  equal implementation's }{\cf5 tooltip}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_TOOLTIPABLE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_cloned} {\cf1 (}{\cf5 a_string}{\cf1 :} {\cf4 STRING_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 a_string}{\cf3  same instance as implementation's }{\cf5 tooltip}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_TOOLTIPABLE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_foreground_color_void}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 foreground_color}{\cf3  void?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_COLORIZABLE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_is_parent_recursive} {\cf1 (}{\cf5 a_widget}{\cf1 :} {\cf4 EV_WIDGET}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 a_widget}{\cf3  }{\cf5 parent}{\cf3 , or recursivly, }{\cf5 parent}{\cf3  of }{\cf5 parent}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 cell_may_contain} {\cf1 (}{\cf5 v}{\cf1 :} {\cf4 EV_WIDGET}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  May }{\cf5 v}{\cf3  be inserted in }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Instances of EV_WINDOW may not be inserted}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in a container even though they are widgets.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 parent_of_source_allows_docking}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does parent of source to be transported}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  allow current to be dragged out? (See }{\cf5 real_source}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Not all Vision2 containers are currently supported by this}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  mechanism, only descendents of EV_DOCKABLE_TARGET}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  are supported.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 rows_may_be_moved} {\cf1 (}{\cf5 a_first_row_index}{\cf1 ,} {\cf5 a_row_count}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do rows from }{\cf5 a_first_row_index}{\cf3  to }{\cf5 a_first_row_index}{\cf3  + }{\cf5 a_row_count}{\cf3  - 1 represent a complete tree structure?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  and if row (}{\cf5 a_first_row_index}{\cf3 ) has a }{\cf5 parent_row}{\cf3 , are all rows to be moved nested within that parent}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  within the tree structure? If }{\cf5 Result}{\cf3  is }{\cf5 True}{\cf3 , the rows may be moved without breaking an existing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  tree structure.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 row_count_positive}{\cf1 :} {\cf5 a_row_count} {\cf1 >=} 1{\line}
{\tab}{\tab}{\tab}{\cf1 first_row_index_valid}{\cf1 :} {\cf5 a_first_row_index} {\cf1 >=} 1 {\b\cf6 and} {\cf5 a_first_row_index} {\cf1 +} {\cf5 a_row_count} {\cf1 -} 1 {\cf1 <=} {\cf5 row_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 source_has_current_recursive} {\cf1 (}{\cf5 source}{\cf1 :} {\cf4 EV_DOCKABLE_SOURCE}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does }{\cf5 source}{\cf3  recursively contain }{\cf5 Current}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  As seen by parenting structure.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\tab}{\cf1 source_not_void}{\cf1 :} {\cf5 source} {\cf1 /=} {\b\cf6 Void}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Event handling}{\line}
{\line}
{\tab}{\cf5 {\cf5 conforming_pick_actions}{\cf1 :} {\cf4 EV_NOTIFY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pebble that fits here is picked.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 dock_ended_actions}{\cf1 :} {\cf4 EV_NOTIFY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed after a dock completes from }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Either to a dockable target or a dockable dialog.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 dock_started_actions}{\cf1 :} {\cf4 EV_NOTIFY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a dockable source is dragged.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_SOURCE_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 docked_actions}{\cf1 :} {\cf4 EV_DOCKABLE_SOURCE_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a dockable source completes a transport}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Fired only if source has been moved, after parenting.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_DOCKABLE_TARGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_TARGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 dpi_changed_actions}{\cf1 :} {\cf4 EV_DPI_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when size changes.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 drop_actions}{\cf1 :} {\cf4 EV_PND_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a pebble is dropped here.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 file_drop_actions}{\cf1 :} {\cf4 EV_LITE_ACTION_SEQUENCE} {\cf1 [}{\cf4 LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when an OS file drop is performed on }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 focus_in_actions}{\cf1 :} {\cf4 EV_NOTIFY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when keyboard focus is gained.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 focus_out_actions}{\cf1 :} {\cf4 EV_NOTIFY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when keyboard focus is lost.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 key_press_actions}{\cf1 :} {\cf4 EV_KEY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a keyboard key is pressed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 key_press_string_actions}{\cf1 :} {\cf4 EV_KEY_STRING_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a keyboard press generates a displayable character.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 key_release_actions}{\cf1 :} {\cf4 EV_KEY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a keyboard key is released.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 mouse_wheel_actions}{\cf1 :} {\cf4 EV_INTEGER_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when mouse wheel is rotated.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pick_actions}{\cf1 :} {\cf4 EV_PND_START_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when }{\cf5 pebble}{\cf3  is picked up.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pick_ended_actions}{\cf1 :} {\cf4 EV_PND_FINISHED_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when a transport from }{\cf5 Current}{\cf3  ends.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If transport completed successfully, then event data}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is target. If cancelled, then event data is Void.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_button_press_actions}{\cf1 :} {\cf4 EV_POINTER_BUTTON_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when screen pointer button is pressed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_button_release_actions}{\cf1 :} {\cf4 EV_POINTER_BUTTON_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when screen pointer button is released.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_double_press_actions}{\cf1 :} {\cf4 EV_POINTER_BUTTON_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when screen pointer is double clicked.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_enter_actions}{\cf1 :} {\cf4 EV_NOTIFY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when screen pointer enters widget.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_leave_actions}{\cf1 :} {\cf4 EV_NOTIFY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when screen pointer leaves widget.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_motion_actions}{\cf1 :} {\cf4 EV_POINTER_MOTION_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when screen pointer moves.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 resize_actions}{\cf1 :} {\cf4 EV_GEOMETRY_ACTION_SEQUENCE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Actions to be performed when size changes.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_WIDGET_ACTION_SEQUENCES}{\line}
{\tab}{\tab}{\tab}{\cf1 not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Iteration}{\line}
{\line}
{\tab}{\cf5 {\cf5 new_cursor}{\cf1 :} {\cf4 ITERATION_CURSOR} {\cf1 [}{\cf4 EV_WIDGET}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Fresh cursor associated with current structure}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_CONTAINER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ITERABLE}{\line}
{\tab}{\tab}{\tab}{\cf1 result_attached}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Markers}{\line}
{\line}
{\tab}{\cf5 {\cf5 fixme} {\cf1 (}{\cf5 comment}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Mark code that has to be "fixed" with }{\cf5 comment}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 REFACTORING_HELPER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 REFACTORING_HELPER}{\line}
{\tab}{\tab}{\tab}{\cf1 comment_not_void}{\cf1 :} {\cf5 comment} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 REFACTORING_HELPER}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
}{\line}
{\tab}{\cf5 {\cf5 to_implement} {\cf1 (}{\cf5 comment}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Mark code that has to be "implemented" with }{\cf5 comment}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 REFACTORING_HELPER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 REFACTORING_HELPER}{\line}
{\tab}{\tab}{\tab}{\cf1 comment_not_void}{\cf1 :} {\cf5 comment} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 REFACTORING_HELPER}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
}{\line}
{\tab}{\cf5 {\cf5 to_implement_assertion} {\cf1 (}{\cf5 comment}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Mark assertion that has to be "implemented" with }{\cf5 comment}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 REFACTORING_HELPER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 REFACTORING_HELPER}{\line}
{\tab}{\tab}{\tab}{\cf1 comment_not_void}{\cf1 :} {\cf5 comment} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 REFACTORING_HELPER}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Measurements}{\line}
{\line}
{\tab}{\cf5 {\cf5 column_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of columns in Current.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 displayed_column_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of non-hidden columns displayed in Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Equal to }{\cf5 column_count}{\cf3  if no columns have been}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  hidden via }{\cf5 hide}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_valid}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0 {\b\cf6 and} {\b\cf6 Result} {\cf1 <=} {\cf5 column_count}{\line}
}{\line}
{\tab}{\cf5 {\cf5 row_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of rows in Current}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\line}
{\tab}{\cf5 {\cf5 tree_node_spacing}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Spacing value used around the expand/collapse node of a}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  subrow. For example, to determine the height available for the node image}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  within a subrow, subtract 2 * tree_node_spacing from the }{\cf5 row_height}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_positive}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
}{\line}
{\tab}{\cf5 {\cf5 visible_row_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of visible rows in }{\cf5 Current}{\cf3 . When }{\cf5 is_tree_enabled}{\cf3 ,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a number of rows may be within a collapsed parent row, so these}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  are ignored.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 not_destroyed}{\cf1 :} {\b\cf6 not} {\cf5 is_destroyed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Output}{\line}
{\line}
{\tab}{\cf5 {\cf5 Io}{\cf1 :} {\cf4 STD_FILES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Handle to standard file setup}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
{\tab}{\tab}{\tab}{\cf1 io_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 print} {\cf1 (}{\cf5 o}{\cf1 :} {\cf4 ANY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Write terse external representation of }{\cf5 o}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on standard output.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
}{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 tagged_out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 tagged_out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Platform}{\line}
{\line}
{\tab}{\cf5 {\cf5 Operating_environment}{\cf1 :} {\cf4 OPERATING_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Objects available from the operating system}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 instance_free}{\cf1 :} {\b\cf6 class}{\line}
{\tab}{\tab}{\tab}{\cf1 operating_environment_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status Report}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_destroyed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 Current}{\cf3  no longer usable?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EV_ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 bridge_ok}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 implementation}{\b\cf1 .}{\cf5 is_destroyed}{\line}
}{\tab}{\line}
{\b\cf6 invariant}{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 EV_CONTAINER}{\line}
{\tab}{\cf1 client_width_non_negative}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 cell_client_width} {\cf1 >=} 0{\line}
{\tab}{\cf1 client_width_within_limit}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 cell_client_width} {\cf1 <=} {\cf5 width}{\line}
{\tab}{\cf1 client_height_non_negative}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 cell_client_height} {\cf1 >=} 0{\line}
{\tab}{\cf1 client_height_within_limit}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 cell_client_height} {\cf1 <=} {\cf5 height}{\line}
{\tab}{\cf1 all_radio_buttons_connected}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 cell_all_radio_buttons_connected}{\line}
{\tab}{\cf1 parent_of_items_is_current}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 cell_parent_of_items_is_current}{\line}
{\tab}{\cf1 items_unique}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 cell_items_unique}{\line}
{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 EV_WIDGET}{\line}
{\tab}{\cf1 is_displayed_implies_show_requested}{\cf1 :} {\cf5 is_usable} {\b\cf6 and then} {\cf5 is_displayed} {\b\cf6 implies} {\cf5 is_show_requested}{\line}
{\tab}{\cf1 parent_contains_current}{\cf1 :} {\cf5 is_usable} {\b\cf6 and then} {\b\cf6 attached} {\cf5 parent} {\b\cf6 as} l_parent {\b\cf6 implies} {\cf5 l_parent}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 EV_PICK_AND_DROPABLE}{\line}
{\tab}{\cf1 user_interface_modes_mutually_exclusive}{\cf1 :} {\cf5 mode_is_pick_and_drop}{\b\cf1 .}{\cf5 to_integer} {\cf1 +} {\cf5 mode_is_drag_and_drop}{\b\cf1 .}{\cf5 to_integer} {\cf1 +} {\cf5 mode_is_target_menu}{\b\cf1 .}{\cf5 to_integer} {\cf1 =} 1{\line}
{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 EV_ANY}{\line}
{\tab}{\cf1 is_initialized}{\cf1 :} {\cf5 is_initialized}{\line}
{\tab}{\cf1 default_create_called}{\cf1 :} {\cf5 default_create_called}{\line}
{\tab}{\cf1 is_coupled}{\cf1 :} {\cf5 default_create_called} {\b\cf6 implies} {\cf1 (}{\cf5 implementation}{\b\cf1 .}{\cf5 interface} {\cf1 =} {\b\cf6 Current} {\b\cf6 or} {\cf1 (}{\b\cf6 attached} {\cf1 \{}{\cf4 EV_ENVIRONMENT}{\cf1 \}} {\b\cf6 Current} {\b\cf6 and then} {\b\cf6 attached} {\cf5 implementation}{\b\cf1 .}{\cf5 interface}{\cf1 )}{\cf1 )}{\line}
{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\cf1 reflexive_equality}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\cf1 reflexive_conformance}{\cf1 :} {\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 EV_POSITIONED}{\line}
{\tab}{\cf1 width_not_negative}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 width} {\cf1 >=} 0{\line}
{\tab}{\cf1 height_not_negative}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 height} {\cf1 >=} 0{\line}
{\tab}{\cf1 minimum_width_not_negative}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 minimum_width} {\cf1 >=} 0{\line}
{\tab}{\cf1 minimum_height_not_negative}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf5 minimum_height} {\cf1 >=} 0{\line}
{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 EV_DOCKABLE_SOURCE}{\line}
{\tab}{\cf1 parent_permits_docking}{\cf1 :} {\cf5 is_dockable} {\b\cf6 implies} {\cf5 parent_of_source_allows_docking}{\line}
{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 EV_COLORIZABLE}{\line}
{\tab}{\cf1 background_color_not_void}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\b\cf6 not} {\cf5 is_background_color_void}{\line}
{\tab}{\cf1 foreground_color_not_void}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\b\cf6 not} {\cf5 is_foreground_color_void}{\line}
{\line}
{\b\cf6 note}{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 1984-2014, Eiffel Software and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"{\line}
{\tab}{\cf1 source}{\cf1 :} "[{\line}
{\tab}{\tab}Eiffel Software{\line}
{\tab}{\tab}5949 Hollister Ave., Goleta, CA 93117 USA{\line}
{\tab}{\tab}Telephone 805-685-1006, Fax 805-685-6869{\line}
{\tab}{\tab}Website http://www.eiffel.com{\line}
{\tab}{\tab}Customer support http://support.eiffel.com{\line}
{\tab}]"{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 EV_GRID}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}

